# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

########################################################################
#  Copyright(c) 2011-2015 Intel Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions 
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Intel Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
########################################################################

########################################################################
#  Copyright(c) 2011-2015 Intel Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions 
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Intel Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
########################################################################

########################################################################
#  Copyright(c) 2011-2015 Intel Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Intel Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
########################################################################

########################################################################
#  Copyright(c) 2011-2016 Intel Corporation All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Intel Corporation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
########################################################################


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(am__configure_deps) $(nobase_include_HEADERS) \
	$(noinst_HEADERS) $(pkginclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/crc/Makefile.am \
	$(srcdir)/erasure_code/Makefile.am $(srcdir)/igzip/Makefile.am \
	$(srcdir)/libisal.pc.in $(srcdir)/raid/Makefile.am \
	$(top_srcdir)/configure build-aux/config.guess \
	build-aux/config.sub build-aux/depcomp build-aux/install-sh \
	build-aux/ltmain.sh build-aux/missing
check_PROGRAMS = $(am__EXEEXT_5)
TESTS = $(am__EXEEXT_5)
EXTRA_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = libisal.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
libisal_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = erasure_code/ec_highlevel_func.lo \
	erasure_code/ec_base.lo erasure_code/gf_vect_mul_sse.lo \
	erasure_code/gf_vect_mul_avx.lo \
	erasure_code/gf_vect_dot_prod_sse.lo \
	erasure_code/gf_vect_dot_prod_avx.lo \
	erasure_code/gf_vect_dot_prod_avx2.lo \
	erasure_code/gf_2vect_dot_prod_sse.lo \
	erasure_code/gf_3vect_dot_prod_sse.lo \
	erasure_code/gf_4vect_dot_prod_sse.lo \
	erasure_code/gf_5vect_dot_prod_sse.lo \
	erasure_code/gf_6vect_dot_prod_sse.lo \
	erasure_code/gf_2vect_dot_prod_avx.lo \
	erasure_code/gf_3vect_dot_prod_avx.lo \
	erasure_code/gf_4vect_dot_prod_avx.lo \
	erasure_code/gf_5vect_dot_prod_avx.lo \
	erasure_code/gf_6vect_dot_prod_avx.lo \
	erasure_code/gf_2vect_dot_prod_avx2.lo \
	erasure_code/gf_3vect_dot_prod_avx2.lo \
	erasure_code/gf_4vect_dot_prod_avx2.lo \
	erasure_code/gf_5vect_dot_prod_avx2.lo \
	erasure_code/gf_6vect_dot_prod_avx2.lo \
	erasure_code/gf_vect_mad_sse.lo \
	erasure_code/gf_2vect_mad_sse.lo \
	erasure_code/gf_3vect_mad_sse.lo \
	erasure_code/gf_4vect_mad_sse.lo \
	erasure_code/gf_5vect_mad_sse.lo \
	erasure_code/gf_6vect_mad_sse.lo \
	erasure_code/gf_vect_mad_avx.lo \
	erasure_code/gf_2vect_mad_avx.lo \
	erasure_code/gf_3vect_mad_avx.lo \
	erasure_code/gf_4vect_mad_avx.lo \
	erasure_code/gf_5vect_mad_avx.lo \
	erasure_code/gf_6vect_mad_avx.lo \
	erasure_code/gf_vect_mad_avx2.lo \
	erasure_code/gf_2vect_mad_avx2.lo \
	erasure_code/gf_3vect_mad_avx2.lo \
	erasure_code/gf_4vect_mad_avx2.lo \
	erasure_code/gf_5vect_mad_avx2.lo \
	erasure_code/gf_6vect_mad_avx2.lo \
	erasure_code/ec_multibinary.lo \
	erasure_code/gf_vect_dot_prod_avx512.lo \
	erasure_code/gf_2vect_dot_prod_avx512.lo \
	erasure_code/gf_3vect_dot_prod_avx512.lo \
	erasure_code/gf_4vect_dot_prod_avx512.lo \
	erasure_code/gf_vect_mad_avx512.lo \
	erasure_code/gf_2vect_mad_avx512.lo \
	erasure_code/gf_3vect_mad_avx512.lo \
	erasure_code/gf_4vect_mad_avx512.lo raid/xor_gen_sse.lo \
	raid/pq_gen_sse.lo raid/xor_check_sse.lo raid/pq_check_sse.lo \
	raid/pq_gen_avx.lo raid/xor_gen_avx.lo raid/pq_gen_avx2.lo \
	raid/raid_base.lo raid/raid_multibinary.lo \
	crc/crc16_t10dif_01.lo crc/crc16_t10dif_by4.lo \
	crc/crc32_ieee_01.lo crc/crc32_ieee_by4.lo \
	crc/crc32_iscsi_01.lo crc/crc32_iscsi_00.lo \
	crc/crc_multibinary.lo crc/crc_base.lo igzip/igzip.lo \
	igzip/hufftables_c.lo igzip/crc_utils_01.lo \
	igzip/crc_utils_04.lo igzip/igzip_body_01.lo \
	igzip/igzip_body_04.lo igzip/igzip_finish.lo \
	igzip/igzip_stateless_01.lo igzip/igzip_stateless_04.lo \
	igzip/crc_data.lo igzip/crc32_gzip.lo \
	igzip/detect_repeated_char.lo igzip/igzip_multibinary.lo \
	igzip/igzip_stateless_base.lo igzip/igzip_base.lo \
	igzip/huff_codes.lo
am_libisal_la_OBJECTS = $(am__objects_1)
libisal_la_OBJECTS = $(am_libisal_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libisal_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libisal_la_LDFLAGS) $(LDFLAGS) -o $@
am__EXEEXT_1 = erasure_code/gf_vect_mul_sse_test$(EXEEXT) \
	erasure_code/gf_vect_mul_avx_test$(EXEEXT) \
	erasure_code/gf_vect_mul_base_test$(EXEEXT) \
	erasure_code/gf_vect_dot_prod_sse_test$(EXEEXT) \
	erasure_code/gf_vect_dot_prod_avx_test$(EXEEXT) \
	erasure_code/gf_2vect_dot_prod_sse_test$(EXEEXT) \
	erasure_code/gf_3vect_dot_prod_sse_test$(EXEEXT) \
	erasure_code/gf_4vect_dot_prod_sse_test$(EXEEXT) \
	erasure_code/gf_5vect_dot_prod_sse_test$(EXEEXT) \
	erasure_code/gf_6vect_dot_prod_sse_test$(EXEEXT) \
	erasure_code/gf_vect_dot_prod_base_test$(EXEEXT) \
	erasure_code/gf_vect_dot_prod_test$(EXEEXT) \
	erasure_code/gf_vect_mad_test$(EXEEXT) \
	erasure_code/erasure_code_base_test$(EXEEXT) \
	erasure_code/erasure_code_sse_test$(EXEEXT) \
	igzip/igzip_rand_test$(EXEEXT)
am__EXEEXT_2 = erasure_code/gf_vect_mul_perf$(EXEEXT) \
	erasure_code/gf_vect_mul_sse_perf$(EXEEXT) \
	erasure_code/gf_vect_mul_avx_perf$(EXEEXT) \
	erasure_code/gf_vect_dot_prod_sse_perf$(EXEEXT) \
	erasure_code/gf_vect_dot_prod_avx_perf$(EXEEXT) \
	erasure_code/gf_2vect_dot_prod_sse_perf$(EXEEXT) \
	erasure_code/gf_3vect_dot_prod_sse_perf$(EXEEXT) \
	erasure_code/gf_4vect_dot_prod_sse_perf$(EXEEXT) \
	erasure_code/gf_5vect_dot_prod_sse_perf$(EXEEXT) \
	erasure_code/gf_6vect_dot_prod_sse_perf$(EXEEXT) \
	erasure_code/gf_vect_dot_prod_perf$(EXEEXT) \
	erasure_code/gf_vect_dot_prod_1tbl$(EXEEXT) \
	erasure_code/gf_vect_mad_perf$(EXEEXT) \
	erasure_code/erasure_code_perf$(EXEEXT) \
	erasure_code/erasure_code_base_perf$(EXEEXT) \
	erasure_code/erasure_code_sse_perf$(EXEEXT) \
	erasure_code/erasure_code_update_perf$(EXEEXT) \
	raid/xor_gen_perf$(EXEEXT) raid/pq_gen_perf$(EXEEXT) \
	crc/crc16_t10dif_perf$(EXEEXT) crc/crc32_ieee_perf$(EXEEXT) \
	crc/crc32_iscsi_perf$(EXEEXT) igzip/igzip_perf$(EXEEXT) \
	igzip/igzip_sync_flush_perf$(EXEEXT)
am__EXEEXT_3 = igzip/igzip_file_perf$(EXEEXT) \
	igzip/igzip_sync_flush_file_perf$(EXEEXT) \
	igzip/igzip_stateless_file_perf$(EXEEXT) \
	igzip/generate_custom_hufftables$(EXEEXT) \
	igzip/generate_constant_block_header$(EXEEXT) \
	igzip/igzip_inflate_perf$(EXEEXT) \
	igzip/igzip_inflate_test$(EXEEXT)
am__EXEEXT_4 = raid/xor_example$(EXEEXT) crc/crc_simple_test$(EXEEXT) \
	igzip/igzip_example$(EXEEXT) \
	igzip/igzip_sync_flush_example$(EXEEXT)
am__EXEEXT_5 = erasure_code/gf_vect_mul_test$(EXEEXT) \
	erasure_code/erasure_code_test$(EXEEXT) \
	erasure_code/gf_inverse_test$(EXEEXT) \
	erasure_code/erasure_code_update_test$(EXEEXT) \
	raid/xor_gen_test$(EXEEXT) raid/pq_gen_test$(EXEEXT) \
	raid/xor_check_test$(EXEEXT) raid/pq_check_test$(EXEEXT) \
	crc/crc16_t10dif_test$(EXEEXT) crc/crc32_ieee_test$(EXEEXT) \
	crc/crc32_iscsi_test$(EXEEXT) igzip/igzip_check$(EXEEXT)
crc_crc16_t10dif_perf_SOURCES = crc/crc16_t10dif_perf.c
crc_crc16_t10dif_perf_OBJECTS = crc/crc16_t10dif_perf.$(OBJEXT)
crc_crc16_t10dif_perf_LDADD = $(LDADD)
crc_crc16_t10dif_perf_DEPENDENCIES = libisal.la
crc_crc16_t10dif_test_SOURCES = crc/crc16_t10dif_test.c
crc_crc16_t10dif_test_OBJECTS = crc/crc16_t10dif_test.$(OBJEXT)
crc_crc16_t10dif_test_LDADD = $(LDADD)
crc_crc16_t10dif_test_DEPENDENCIES = libisal.la
crc_crc32_ieee_perf_SOURCES = crc/crc32_ieee_perf.c
crc_crc32_ieee_perf_OBJECTS = crc/crc32_ieee_perf.$(OBJEXT)
crc_crc32_ieee_perf_LDADD = $(LDADD)
crc_crc32_ieee_perf_DEPENDENCIES = libisal.la
crc_crc32_ieee_test_SOURCES = crc/crc32_ieee_test.c
crc_crc32_ieee_test_OBJECTS = crc/crc32_ieee_test.$(OBJEXT)
crc_crc32_ieee_test_LDADD = $(LDADD)
crc_crc32_ieee_test_DEPENDENCIES = libisal.la
crc_crc32_iscsi_perf_SOURCES = crc/crc32_iscsi_perf.c
crc_crc32_iscsi_perf_OBJECTS = crc/crc32_iscsi_perf.$(OBJEXT)
crc_crc32_iscsi_perf_LDADD = $(LDADD)
crc_crc32_iscsi_perf_DEPENDENCIES = libisal.la
crc_crc32_iscsi_test_SOURCES = crc/crc32_iscsi_test.c
crc_crc32_iscsi_test_OBJECTS = crc/crc32_iscsi_test.$(OBJEXT)
crc_crc32_iscsi_test_LDADD = $(LDADD)
crc_crc32_iscsi_test_DEPENDENCIES = libisal.la
crc_crc_simple_test_SOURCES = crc/crc_simple_test.c
crc_crc_simple_test_OBJECTS = crc/crc_simple_test.$(OBJEXT)
crc_crc_simple_test_LDADD = $(LDADD)
crc_crc_simple_test_DEPENDENCIES = libisal.la
erasure_code_erasure_code_base_perf_SOURCES =  \
	erasure_code/erasure_code_base_perf.c
erasure_code_erasure_code_base_perf_OBJECTS =  \
	erasure_code/erasure_code_base_perf.$(OBJEXT)
erasure_code_erasure_code_base_perf_LDADD = $(LDADD)
erasure_code_erasure_code_base_perf_DEPENDENCIES = libisal.la
erasure_code_erasure_code_base_test_SOURCES =  \
	erasure_code/erasure_code_base_test.c
erasure_code_erasure_code_base_test_OBJECTS =  \
	erasure_code/erasure_code_base_test.$(OBJEXT)
erasure_code_erasure_code_base_test_LDADD = $(LDADD)
erasure_code_erasure_code_base_test_DEPENDENCIES = libisal.la
erasure_code_erasure_code_perf_SOURCES =  \
	erasure_code/erasure_code_perf.c
erasure_code_erasure_code_perf_OBJECTS =  \
	erasure_code/erasure_code_perf.$(OBJEXT)
erasure_code_erasure_code_perf_LDADD = $(LDADD)
erasure_code_erasure_code_perf_DEPENDENCIES = libisal.la
erasure_code_erasure_code_sse_perf_SOURCES =  \
	erasure_code/erasure_code_sse_perf.c
erasure_code_erasure_code_sse_perf_OBJECTS =  \
	erasure_code/erasure_code_sse_perf.$(OBJEXT)
erasure_code_erasure_code_sse_perf_LDADD = $(LDADD)
erasure_code_erasure_code_sse_perf_DEPENDENCIES = libisal.la
erasure_code_erasure_code_sse_test_SOURCES =  \
	erasure_code/erasure_code_sse_test.c
erasure_code_erasure_code_sse_test_OBJECTS =  \
	erasure_code/erasure_code_sse_test.$(OBJEXT)
erasure_code_erasure_code_sse_test_LDADD = $(LDADD)
erasure_code_erasure_code_sse_test_DEPENDENCIES = libisal.la
erasure_code_erasure_code_test_SOURCES =  \
	erasure_code/erasure_code_test.c
erasure_code_erasure_code_test_OBJECTS =  \
	erasure_code/erasure_code_test.$(OBJEXT)
erasure_code_erasure_code_test_LDADD = $(LDADD)
erasure_code_erasure_code_test_DEPENDENCIES = libisal.la
erasure_code_erasure_code_update_perf_SOURCES =  \
	erasure_code/erasure_code_update_perf.c
erasure_code_erasure_code_update_perf_OBJECTS =  \
	erasure_code/erasure_code_update_perf.$(OBJEXT)
erasure_code_erasure_code_update_perf_LDADD = $(LDADD)
erasure_code_erasure_code_update_perf_DEPENDENCIES = libisal.la
erasure_code_erasure_code_update_test_SOURCES =  \
	erasure_code/erasure_code_update_test.c
erasure_code_erasure_code_update_test_OBJECTS =  \
	erasure_code/erasure_code_update_test.$(OBJEXT)
erasure_code_erasure_code_update_test_LDADD = $(LDADD)
erasure_code_erasure_code_update_test_DEPENDENCIES = libisal.la
erasure_code_gf_2vect_dot_prod_sse_perf_SOURCES =  \
	erasure_code/gf_2vect_dot_prod_sse_perf.c
erasure_code_gf_2vect_dot_prod_sse_perf_OBJECTS =  \
	erasure_code/gf_2vect_dot_prod_sse_perf.$(OBJEXT)
erasure_code_gf_2vect_dot_prod_sse_perf_LDADD = $(LDADD)
erasure_code_gf_2vect_dot_prod_sse_perf_DEPENDENCIES = libisal.la
erasure_code_gf_2vect_dot_prod_sse_test_SOURCES =  \
	erasure_code/gf_2vect_dot_prod_sse_test.c
erasure_code_gf_2vect_dot_prod_sse_test_OBJECTS =  \
	erasure_code/gf_2vect_dot_prod_sse_test.$(OBJEXT)
erasure_code_gf_2vect_dot_prod_sse_test_LDADD = $(LDADD)
erasure_code_gf_2vect_dot_prod_sse_test_DEPENDENCIES = libisal.la
erasure_code_gf_3vect_dot_prod_sse_perf_SOURCES =  \
	erasure_code/gf_3vect_dot_prod_sse_perf.c
erasure_code_gf_3vect_dot_prod_sse_perf_OBJECTS =  \
	erasure_code/gf_3vect_dot_prod_sse_perf.$(OBJEXT)
erasure_code_gf_3vect_dot_prod_sse_perf_LDADD = $(LDADD)
erasure_code_gf_3vect_dot_prod_sse_perf_DEPENDENCIES = libisal.la
erasure_code_gf_3vect_dot_prod_sse_test_SOURCES =  \
	erasure_code/gf_3vect_dot_prod_sse_test.c
erasure_code_gf_3vect_dot_prod_sse_test_OBJECTS =  \
	erasure_code/gf_3vect_dot_prod_sse_test.$(OBJEXT)
erasure_code_gf_3vect_dot_prod_sse_test_LDADD = $(LDADD)
erasure_code_gf_3vect_dot_prod_sse_test_DEPENDENCIES = libisal.la
erasure_code_gf_4vect_dot_prod_sse_perf_SOURCES =  \
	erasure_code/gf_4vect_dot_prod_sse_perf.c
erasure_code_gf_4vect_dot_prod_sse_perf_OBJECTS =  \
	erasure_code/gf_4vect_dot_prod_sse_perf.$(OBJEXT)
erasure_code_gf_4vect_dot_prod_sse_perf_LDADD = $(LDADD)
erasure_code_gf_4vect_dot_prod_sse_perf_DEPENDENCIES = libisal.la
erasure_code_gf_4vect_dot_prod_sse_test_SOURCES =  \
	erasure_code/gf_4vect_dot_prod_sse_test.c
erasure_code_gf_4vect_dot_prod_sse_test_OBJECTS =  \
	erasure_code/gf_4vect_dot_prod_sse_test.$(OBJEXT)
erasure_code_gf_4vect_dot_prod_sse_test_LDADD = $(LDADD)
erasure_code_gf_4vect_dot_prod_sse_test_DEPENDENCIES = libisal.la
erasure_code_gf_5vect_dot_prod_sse_perf_SOURCES =  \
	erasure_code/gf_5vect_dot_prod_sse_perf.c
erasure_code_gf_5vect_dot_prod_sse_perf_OBJECTS =  \
	erasure_code/gf_5vect_dot_prod_sse_perf.$(OBJEXT)
erasure_code_gf_5vect_dot_prod_sse_perf_LDADD = $(LDADD)
erasure_code_gf_5vect_dot_prod_sse_perf_DEPENDENCIES = libisal.la
erasure_code_gf_5vect_dot_prod_sse_test_SOURCES =  \
	erasure_code/gf_5vect_dot_prod_sse_test.c
erasure_code_gf_5vect_dot_prod_sse_test_OBJECTS =  \
	erasure_code/gf_5vect_dot_prod_sse_test.$(OBJEXT)
erasure_code_gf_5vect_dot_prod_sse_test_LDADD = $(LDADD)
erasure_code_gf_5vect_dot_prod_sse_test_DEPENDENCIES = libisal.la
erasure_code_gf_6vect_dot_prod_sse_perf_SOURCES =  \
	erasure_code/gf_6vect_dot_prod_sse_perf.c
erasure_code_gf_6vect_dot_prod_sse_perf_OBJECTS =  \
	erasure_code/gf_6vect_dot_prod_sse_perf.$(OBJEXT)
erasure_code_gf_6vect_dot_prod_sse_perf_LDADD = $(LDADD)
erasure_code_gf_6vect_dot_prod_sse_perf_DEPENDENCIES = libisal.la
erasure_code_gf_6vect_dot_prod_sse_test_SOURCES =  \
	erasure_code/gf_6vect_dot_prod_sse_test.c
erasure_code_gf_6vect_dot_prod_sse_test_OBJECTS =  \
	erasure_code/gf_6vect_dot_prod_sse_test.$(OBJEXT)
erasure_code_gf_6vect_dot_prod_sse_test_LDADD = $(LDADD)
erasure_code_gf_6vect_dot_prod_sse_test_DEPENDENCIES = libisal.la
erasure_code_gf_inverse_test_SOURCES = erasure_code/gf_inverse_test.c
erasure_code_gf_inverse_test_OBJECTS =  \
	erasure_code/gf_inverse_test.$(OBJEXT)
erasure_code_gf_inverse_test_LDADD = $(LDADD)
erasure_code_gf_inverse_test_DEPENDENCIES = libisal.la
erasure_code_gf_vect_dot_prod_1tbl_SOURCES =  \
	erasure_code/gf_vect_dot_prod_1tbl.c
erasure_code_gf_vect_dot_prod_1tbl_OBJECTS =  \
	erasure_code/gf_vect_dot_prod_1tbl.$(OBJEXT)
erasure_code_gf_vect_dot_prod_1tbl_LDADD = $(LDADD)
erasure_code_gf_vect_dot_prod_1tbl_DEPENDENCIES = libisal.la
erasure_code_gf_vect_dot_prod_avx_perf_SOURCES =  \
	erasure_code/gf_vect_dot_prod_avx_perf.c
erasure_code_gf_vect_dot_prod_avx_perf_OBJECTS =  \
	erasure_code/gf_vect_dot_prod_avx_perf.$(OBJEXT)
erasure_code_gf_vect_dot_prod_avx_perf_LDADD = $(LDADD)
erasure_code_gf_vect_dot_prod_avx_perf_DEPENDENCIES = libisal.la
erasure_code_gf_vect_dot_prod_avx_test_SOURCES =  \
	erasure_code/gf_vect_dot_prod_avx_test.c
erasure_code_gf_vect_dot_prod_avx_test_OBJECTS =  \
	erasure_code/gf_vect_dot_prod_avx_test.$(OBJEXT)
erasure_code_gf_vect_dot_prod_avx_test_LDADD = $(LDADD)
erasure_code_gf_vect_dot_prod_avx_test_DEPENDENCIES = libisal.la
erasure_code_gf_vect_dot_prod_base_test_SOURCES =  \
	erasure_code/gf_vect_dot_prod_base_test.c
erasure_code_gf_vect_dot_prod_base_test_OBJECTS =  \
	erasure_code/gf_vect_dot_prod_base_test.$(OBJEXT)
erasure_code_gf_vect_dot_prod_base_test_LDADD = $(LDADD)
erasure_code_gf_vect_dot_prod_base_test_DEPENDENCIES = libisal.la
erasure_code_gf_vect_dot_prod_perf_SOURCES =  \
	erasure_code/gf_vect_dot_prod_perf.c
erasure_code_gf_vect_dot_prod_perf_OBJECTS =  \
	erasure_code/gf_vect_dot_prod_perf.$(OBJEXT)
erasure_code_gf_vect_dot_prod_perf_LDADD = $(LDADD)
erasure_code_gf_vect_dot_prod_perf_DEPENDENCIES = libisal.la
erasure_code_gf_vect_dot_prod_sse_perf_SOURCES =  \
	erasure_code/gf_vect_dot_prod_sse_perf.c
erasure_code_gf_vect_dot_prod_sse_perf_OBJECTS =  \
	erasure_code/gf_vect_dot_prod_sse_perf.$(OBJEXT)
erasure_code_gf_vect_dot_prod_sse_perf_LDADD = $(LDADD)
erasure_code_gf_vect_dot_prod_sse_perf_DEPENDENCIES = libisal.la
erasure_code_gf_vect_dot_prod_sse_test_SOURCES =  \
	erasure_code/gf_vect_dot_prod_sse_test.c
erasure_code_gf_vect_dot_prod_sse_test_OBJECTS =  \
	erasure_code/gf_vect_dot_prod_sse_test.$(OBJEXT)
erasure_code_gf_vect_dot_prod_sse_test_LDADD = $(LDADD)
erasure_code_gf_vect_dot_prod_sse_test_DEPENDENCIES = libisal.la
erasure_code_gf_vect_dot_prod_test_SOURCES =  \
	erasure_code/gf_vect_dot_prod_test.c
erasure_code_gf_vect_dot_prod_test_OBJECTS =  \
	erasure_code/gf_vect_dot_prod_test.$(OBJEXT)
erasure_code_gf_vect_dot_prod_test_LDADD = $(LDADD)
erasure_code_gf_vect_dot_prod_test_DEPENDENCIES = libisal.la
erasure_code_gf_vect_mad_perf_SOURCES =  \
	erasure_code/gf_vect_mad_perf.c
erasure_code_gf_vect_mad_perf_OBJECTS =  \
	erasure_code/gf_vect_mad_perf.$(OBJEXT)
erasure_code_gf_vect_mad_perf_LDADD = $(LDADD)
erasure_code_gf_vect_mad_perf_DEPENDENCIES = libisal.la
erasure_code_gf_vect_mad_test_SOURCES =  \
	erasure_code/gf_vect_mad_test.c
erasure_code_gf_vect_mad_test_OBJECTS =  \
	erasure_code/gf_vect_mad_test.$(OBJEXT)
erasure_code_gf_vect_mad_test_LDADD = $(LDADD)
erasure_code_gf_vect_mad_test_DEPENDENCIES = libisal.la
erasure_code_gf_vect_mul_avx_perf_SOURCES =  \
	erasure_code/gf_vect_mul_avx_perf.c
erasure_code_gf_vect_mul_avx_perf_OBJECTS =  \
	erasure_code/gf_vect_mul_avx_perf.$(OBJEXT)
erasure_code_gf_vect_mul_avx_perf_LDADD = $(LDADD)
erasure_code_gf_vect_mul_avx_perf_DEPENDENCIES = libisal.la
erasure_code_gf_vect_mul_avx_test_SOURCES =  \
	erasure_code/gf_vect_mul_avx_test.c
erasure_code_gf_vect_mul_avx_test_OBJECTS =  \
	erasure_code/gf_vect_mul_avx_test.$(OBJEXT)
erasure_code_gf_vect_mul_avx_test_LDADD = $(LDADD)
erasure_code_gf_vect_mul_avx_test_DEPENDENCIES = libisal.la
erasure_code_gf_vect_mul_base_test_SOURCES =  \
	erasure_code/gf_vect_mul_base_test.c
erasure_code_gf_vect_mul_base_test_OBJECTS =  \
	erasure_code/gf_vect_mul_base_test.$(OBJEXT)
erasure_code_gf_vect_mul_base_test_LDADD = $(LDADD)
erasure_code_gf_vect_mul_base_test_DEPENDENCIES = libisal.la
erasure_code_gf_vect_mul_perf_SOURCES =  \
	erasure_code/gf_vect_mul_perf.c
erasure_code_gf_vect_mul_perf_OBJECTS =  \
	erasure_code/gf_vect_mul_perf.$(OBJEXT)
erasure_code_gf_vect_mul_perf_LDADD = $(LDADD)
erasure_code_gf_vect_mul_perf_DEPENDENCIES = libisal.la
erasure_code_gf_vect_mul_sse_perf_SOURCES =  \
	erasure_code/gf_vect_mul_sse_perf.c
erasure_code_gf_vect_mul_sse_perf_OBJECTS =  \
	erasure_code/gf_vect_mul_sse_perf.$(OBJEXT)
erasure_code_gf_vect_mul_sse_perf_LDADD = $(LDADD)
erasure_code_gf_vect_mul_sse_perf_DEPENDENCIES = libisal.la
erasure_code_gf_vect_mul_sse_test_SOURCES =  \
	erasure_code/gf_vect_mul_sse_test.c
erasure_code_gf_vect_mul_sse_test_OBJECTS =  \
	erasure_code/gf_vect_mul_sse_test.$(OBJEXT)
erasure_code_gf_vect_mul_sse_test_LDADD = $(LDADD)
erasure_code_gf_vect_mul_sse_test_DEPENDENCIES = libisal.la
erasure_code_gf_vect_mul_test_SOURCES =  \
	erasure_code/gf_vect_mul_test.c
erasure_code_gf_vect_mul_test_OBJECTS =  \
	erasure_code/gf_vect_mul_test.$(OBJEXT)
erasure_code_gf_vect_mul_test_LDADD = $(LDADD)
erasure_code_gf_vect_mul_test_DEPENDENCIES = libisal.la
igzip_generate_constant_block_header_SOURCES =  \
	igzip/generate_constant_block_header.c
igzip_generate_constant_block_header_OBJECTS =  \
	igzip/generate_constant_block_header.$(OBJEXT)
igzip_generate_constant_block_header_LDADD = $(LDADD)
igzip_generate_constant_block_header_DEPENDENCIES = libisal.la
igzip_generate_custom_hufftables_SOURCES =  \
	igzip/generate_custom_hufftables.c
igzip_generate_custom_hufftables_OBJECTS =  \
	igzip/generate_custom_hufftables.$(OBJEXT)
igzip_generate_custom_hufftables_LDADD = $(LDADD)
igzip_generate_custom_hufftables_DEPENDENCIES = libisal.la
igzip_igzip_check_SOURCES = igzip/igzip_check.c
igzip_igzip_check_OBJECTS = igzip/igzip_check.$(OBJEXT)
igzip_igzip_check_DEPENDENCIES = igzip/igzip_inflate_ref.lo libisal.la
igzip_igzip_example_SOURCES = igzip/igzip_example.c
igzip_igzip_example_OBJECTS = igzip/igzip_example.$(OBJEXT)
igzip_igzip_example_LDADD = $(LDADD)
igzip_igzip_example_DEPENDENCIES = libisal.la
igzip_igzip_file_perf_SOURCES = igzip/igzip_file_perf.c
igzip_igzip_file_perf_OBJECTS = igzip/igzip_file_perf.$(OBJEXT)
igzip_igzip_file_perf_LDADD = $(LDADD)
igzip_igzip_file_perf_DEPENDENCIES = libisal.la
igzip_igzip_inflate_perf_SOURCES = igzip/igzip_inflate_perf.c
igzip_igzip_inflate_perf_OBJECTS = igzip/igzip_inflate_perf.$(OBJEXT)
igzip_igzip_inflate_perf_DEPENDENCIES = igzip/igzip_inflate_ref.lo \
	libisal.la
igzip_igzip_inflate_perf_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(igzip_igzip_inflate_perf_LDFLAGS) \
	$(LDFLAGS) -o $@
igzip_igzip_inflate_test_SOURCES = igzip/igzip_inflate_test.c
igzip_igzip_inflate_test_OBJECTS = igzip/igzip_inflate_test.$(OBJEXT)
igzip_igzip_inflate_test_DEPENDENCIES = igzip/igzip_inflate_ref.lo \
	libisal.la
igzip_igzip_inflate_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(igzip_igzip_inflate_test_LDFLAGS) \
	$(LDFLAGS) -o $@
igzip_igzip_perf_SOURCES = igzip/igzip_perf.c
igzip_igzip_perf_OBJECTS = igzip/igzip_perf.$(OBJEXT)
igzip_igzip_perf_LDADD = $(LDADD)
igzip_igzip_perf_DEPENDENCIES = libisal.la
igzip_igzip_rand_test_SOURCES = igzip/igzip_rand_test.c
igzip_igzip_rand_test_OBJECTS = igzip/igzip_rand_test.$(OBJEXT)
igzip_igzip_rand_test_DEPENDENCIES = igzip/igzip_inflate_ref.lo \
	libisal.la
igzip_igzip_stateless_file_perf_SOURCES =  \
	igzip/igzip_stateless_file_perf.c
igzip_igzip_stateless_file_perf_OBJECTS =  \
	igzip/igzip_stateless_file_perf.$(OBJEXT)
igzip_igzip_stateless_file_perf_LDADD = $(LDADD)
igzip_igzip_stateless_file_perf_DEPENDENCIES = libisal.la
igzip_igzip_sync_flush_example_SOURCES =  \
	igzip/igzip_sync_flush_example.c
igzip_igzip_sync_flush_example_OBJECTS =  \
	igzip/igzip_sync_flush_example.$(OBJEXT)
igzip_igzip_sync_flush_example_LDADD = $(LDADD)
igzip_igzip_sync_flush_example_DEPENDENCIES = libisal.la
igzip_igzip_sync_flush_file_perf_SOURCES =  \
	igzip/igzip_sync_flush_file_perf.c
igzip_igzip_sync_flush_file_perf_OBJECTS =  \
	igzip/igzip_sync_flush_file_perf.$(OBJEXT)
igzip_igzip_sync_flush_file_perf_LDADD = $(LDADD)
igzip_igzip_sync_flush_file_perf_DEPENDENCIES = libisal.la
igzip_igzip_sync_flush_perf_SOURCES = igzip/igzip_sync_flush_perf.c
igzip_igzip_sync_flush_perf_OBJECTS =  \
	igzip/igzip_sync_flush_perf.$(OBJEXT)
igzip_igzip_sync_flush_perf_LDADD = $(LDADD)
igzip_igzip_sync_flush_perf_DEPENDENCIES = libisal.la
raid_pq_check_test_SOURCES = raid/pq_check_test.c
raid_pq_check_test_OBJECTS = raid/pq_check_test.$(OBJEXT)
raid_pq_check_test_LDADD = $(LDADD)
raid_pq_check_test_DEPENDENCIES = libisal.la
raid_pq_gen_perf_SOURCES = raid/pq_gen_perf.c
raid_pq_gen_perf_OBJECTS = raid/pq_gen_perf.$(OBJEXT)
raid_pq_gen_perf_LDADD = $(LDADD)
raid_pq_gen_perf_DEPENDENCIES = libisal.la
raid_pq_gen_test_SOURCES = raid/pq_gen_test.c
raid_pq_gen_test_OBJECTS = raid/pq_gen_test.$(OBJEXT)
raid_pq_gen_test_LDADD = $(LDADD)
raid_pq_gen_test_DEPENDENCIES = libisal.la
raid_xor_check_test_SOURCES = raid/xor_check_test.c
raid_xor_check_test_OBJECTS = raid/xor_check_test.$(OBJEXT)
raid_xor_check_test_LDADD = $(LDADD)
raid_xor_check_test_DEPENDENCIES = libisal.la
raid_xor_example_SOURCES = raid/xor_example.c
raid_xor_example_OBJECTS = raid/xor_example.$(OBJEXT)
raid_xor_example_LDADD = $(LDADD)
raid_xor_example_DEPENDENCIES = libisal.la
raid_xor_gen_perf_SOURCES = raid/xor_gen_perf.c
raid_xor_gen_perf_OBJECTS = raid/xor_gen_perf.$(OBJEXT)
raid_xor_gen_perf_LDADD = $(LDADD)
raid_xor_gen_perf_DEPENDENCIES = libisal.la
raid_xor_gen_test_SOURCES = raid/xor_gen_test.c
raid_xor_gen_test_OBJECTS = raid/xor_gen_test.$(OBJEXT)
raid_xor_gen_test_LDADD = $(LDADD)
raid_xor_gen_test_DEPENDENCIES = libisal.la
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCCASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CCAS) $(AM_CCASFLAGS) \
	$(CCASFLAGS)
AM_V_CCAS = $(am__v_CCAS_$(V))
am__v_CCAS_ = $(am__v_CCAS_$(AM_DEFAULT_VERBOSITY))
am__v_CCAS_0 = @echo "  CCAS  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libisal_la_SOURCES) crc/crc16_t10dif_perf.c \
	crc/crc16_t10dif_test.c crc/crc32_ieee_perf.c \
	crc/crc32_ieee_test.c crc/crc32_iscsi_perf.c \
	crc/crc32_iscsi_test.c crc/crc_simple_test.c \
	erasure_code/erasure_code_base_perf.c \
	erasure_code/erasure_code_base_test.c \
	erasure_code/erasure_code_perf.c \
	erasure_code/erasure_code_sse_perf.c \
	erasure_code/erasure_code_sse_test.c \
	erasure_code/erasure_code_test.c \
	erasure_code/erasure_code_update_perf.c \
	erasure_code/erasure_code_update_test.c \
	erasure_code/gf_2vect_dot_prod_sse_perf.c \
	erasure_code/gf_2vect_dot_prod_sse_test.c \
	erasure_code/gf_3vect_dot_prod_sse_perf.c \
	erasure_code/gf_3vect_dot_prod_sse_test.c \
	erasure_code/gf_4vect_dot_prod_sse_perf.c \
	erasure_code/gf_4vect_dot_prod_sse_test.c \
	erasure_code/gf_5vect_dot_prod_sse_perf.c \
	erasure_code/gf_5vect_dot_prod_sse_test.c \
	erasure_code/gf_6vect_dot_prod_sse_perf.c \
	erasure_code/gf_6vect_dot_prod_sse_test.c \
	erasure_code/gf_inverse_test.c \
	erasure_code/gf_vect_dot_prod_1tbl.c \
	erasure_code/gf_vect_dot_prod_avx_perf.c \
	erasure_code/gf_vect_dot_prod_avx_test.c \
	erasure_code/gf_vect_dot_prod_base_test.c \
	erasure_code/gf_vect_dot_prod_perf.c \
	erasure_code/gf_vect_dot_prod_sse_perf.c \
	erasure_code/gf_vect_dot_prod_sse_test.c \
	erasure_code/gf_vect_dot_prod_test.c \
	erasure_code/gf_vect_mad_perf.c \
	erasure_code/gf_vect_mad_test.c \
	erasure_code/gf_vect_mul_avx_perf.c \
	erasure_code/gf_vect_mul_avx_test.c \
	erasure_code/gf_vect_mul_base_test.c \
	erasure_code/gf_vect_mul_perf.c \
	erasure_code/gf_vect_mul_sse_perf.c \
	erasure_code/gf_vect_mul_sse_test.c \
	erasure_code/gf_vect_mul_test.c \
	igzip/generate_constant_block_header.c \
	igzip/generate_custom_hufftables.c igzip/igzip_check.c \
	igzip/igzip_example.c igzip/igzip_file_perf.c \
	igzip/igzip_inflate_perf.c igzip/igzip_inflate_test.c \
	igzip/igzip_perf.c igzip/igzip_rand_test.c \
	igzip/igzip_stateless_file_perf.c \
	igzip/igzip_sync_flush_example.c \
	igzip/igzip_sync_flush_file_perf.c \
	igzip/igzip_sync_flush_perf.c raid/pq_check_test.c \
	raid/pq_gen_perf.c raid/pq_gen_test.c raid/xor_check_test.c \
	raid/xor_example.c raid/xor_gen_perf.c raid/xor_gen_test.c
DIST_SOURCES = $(libisal_la_SOURCES) crc/crc16_t10dif_perf.c \
	crc/crc16_t10dif_test.c crc/crc32_ieee_perf.c \
	crc/crc32_ieee_test.c crc/crc32_iscsi_perf.c \
	crc/crc32_iscsi_test.c crc/crc_simple_test.c \
	erasure_code/erasure_code_base_perf.c \
	erasure_code/erasure_code_base_test.c \
	erasure_code/erasure_code_perf.c \
	erasure_code/erasure_code_sse_perf.c \
	erasure_code/erasure_code_sse_test.c \
	erasure_code/erasure_code_test.c \
	erasure_code/erasure_code_update_perf.c \
	erasure_code/erasure_code_update_test.c \
	erasure_code/gf_2vect_dot_prod_sse_perf.c \
	erasure_code/gf_2vect_dot_prod_sse_test.c \
	erasure_code/gf_3vect_dot_prod_sse_perf.c \
	erasure_code/gf_3vect_dot_prod_sse_test.c \
	erasure_code/gf_4vect_dot_prod_sse_perf.c \
	erasure_code/gf_4vect_dot_prod_sse_test.c \
	erasure_code/gf_5vect_dot_prod_sse_perf.c \
	erasure_code/gf_5vect_dot_prod_sse_test.c \
	erasure_code/gf_6vect_dot_prod_sse_perf.c \
	erasure_code/gf_6vect_dot_prod_sse_test.c \
	erasure_code/gf_inverse_test.c \
	erasure_code/gf_vect_dot_prod_1tbl.c \
	erasure_code/gf_vect_dot_prod_avx_perf.c \
	erasure_code/gf_vect_dot_prod_avx_test.c \
	erasure_code/gf_vect_dot_prod_base_test.c \
	erasure_code/gf_vect_dot_prod_perf.c \
	erasure_code/gf_vect_dot_prod_sse_perf.c \
	erasure_code/gf_vect_dot_prod_sse_test.c \
	erasure_code/gf_vect_dot_prod_test.c \
	erasure_code/gf_vect_mad_perf.c \
	erasure_code/gf_vect_mad_test.c \
	erasure_code/gf_vect_mul_avx_perf.c \
	erasure_code/gf_vect_mul_avx_test.c \
	erasure_code/gf_vect_mul_base_test.c \
	erasure_code/gf_vect_mul_perf.c \
	erasure_code/gf_vect_mul_sse_perf.c \
	erasure_code/gf_vect_mul_sse_test.c \
	erasure_code/gf_vect_mul_test.c \
	igzip/generate_constant_block_header.c \
	igzip/generate_custom_hufftables.c igzip/igzip_check.c \
	igzip/igzip_example.c igzip/igzip_file_perf.c \
	igzip/igzip_inflate_perf.c igzip/igzip_inflate_test.c \
	igzip/igzip_perf.c igzip/igzip_rand_test.c \
	igzip/igzip_stateless_file_perf.c \
	igzip/igzip_sync_flush_example.c \
	igzip/igzip_sync_flush_file_perf.c \
	igzip/igzip_sync_flush_perf.c raid/pq_check_test.c \
	raid/pq_gen_perf.c raid/pq_gen_test.c raid/xor_check_test.c \
	raid/xor_example.c raid/xor_gen_perf.c raid/xor_gen_test.c
HEADERS = $(nobase_include_HEADERS) $(noinst_HEADERS) \
	$(pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
GZIP_ENV = --best
DIST_ARCHIVES = $(distdir).tar.xz
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = $(as_filter)
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
HAVE_NASM = @HAVE_NASM@
HAVE_YASM = @HAVE_YASM@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
my_CFLAGS = @my_CFLAGS@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
yasm_args = @yasm_args@
EXTRA_DIST = autogen.sh Makefile.unx make.inc Makefile.nmake isa-l.def \
	LICENSE README.md ${other_src} Release_notes.txt \
	tools/yasm-filter.sh tools/nasm-filter.sh
CLEANFILES = ${EXTRA_PROGRAMS} isa-l.h

# For tests
LDADD = libisal.la
AM_MAKEFLAGS = --no-print-directory
noinst_HEADERS = 
pkginclude_HEADERS = include/test.h include/types.h $(sort \
	${extern_hdrs})
noinst_LTLIBRARIES = 
INCLUDE = -I $(srcdir)/include/
AM_CFLAGS = ${my_CFLAGS} ${INCLUDE} ${D}

#if HAVE_AVX512
lsrc = erasure_code/ec_highlevel_func.c erasure_code/ec_base.c \
	erasure_code/gf_vect_mul_sse.asm \
	erasure_code/gf_vect_mul_avx.asm \
	erasure_code/gf_vect_dot_prod_sse.asm \
	erasure_code/gf_vect_dot_prod_avx.asm \
	erasure_code/gf_vect_dot_prod_avx2.asm \
	erasure_code/gf_2vect_dot_prod_sse.asm \
	erasure_code/gf_3vect_dot_prod_sse.asm \
	erasure_code/gf_4vect_dot_prod_sse.asm \
	erasure_code/gf_5vect_dot_prod_sse.asm \
	erasure_code/gf_6vect_dot_prod_sse.asm \
	erasure_code/gf_2vect_dot_prod_avx.asm \
	erasure_code/gf_3vect_dot_prod_avx.asm \
	erasure_code/gf_4vect_dot_prod_avx.asm \
	erasure_code/gf_5vect_dot_prod_avx.asm \
	erasure_code/gf_6vect_dot_prod_avx.asm \
	erasure_code/gf_2vect_dot_prod_avx2.asm \
	erasure_code/gf_3vect_dot_prod_avx2.asm \
	erasure_code/gf_4vect_dot_prod_avx2.asm \
	erasure_code/gf_5vect_dot_prod_avx2.asm \
	erasure_code/gf_6vect_dot_prod_avx2.asm \
	erasure_code/gf_vect_mad_sse.asm \
	erasure_code/gf_2vect_mad_sse.asm \
	erasure_code/gf_3vect_mad_sse.asm \
	erasure_code/gf_4vect_mad_sse.asm \
	erasure_code/gf_5vect_mad_sse.asm \
	erasure_code/gf_6vect_mad_sse.asm \
	erasure_code/gf_vect_mad_avx.asm \
	erasure_code/gf_2vect_mad_avx.asm \
	erasure_code/gf_3vect_mad_avx.asm \
	erasure_code/gf_4vect_mad_avx.asm \
	erasure_code/gf_5vect_mad_avx.asm \
	erasure_code/gf_6vect_mad_avx.asm \
	erasure_code/gf_vect_mad_avx2.asm \
	erasure_code/gf_2vect_mad_avx2.asm \
	erasure_code/gf_3vect_mad_avx2.asm \
	erasure_code/gf_4vect_mad_avx2.asm \
	erasure_code/gf_5vect_mad_avx2.asm \
	erasure_code/gf_6vect_mad_avx2.asm \
	erasure_code/ec_multibinary.asm \
	erasure_code/gf_vect_dot_prod_avx512.asm \
	erasure_code/gf_2vect_dot_prod_avx512.asm \
	erasure_code/gf_3vect_dot_prod_avx512.asm \
	erasure_code/gf_4vect_dot_prod_avx512.asm \
	erasure_code/gf_vect_mad_avx512.asm \
	erasure_code/gf_2vect_mad_avx512.asm \
	erasure_code/gf_3vect_mad_avx512.asm \
	erasure_code/gf_4vect_mad_avx512.asm raid/xor_gen_sse.asm \
	raid/pq_gen_sse.asm raid/xor_check_sse.asm \
	raid/pq_check_sse.asm raid/pq_gen_avx.asm raid/xor_gen_avx.asm \
	raid/pq_gen_avx2.asm raid/raid_base.c \
	raid/raid_multibinary.asm crc/crc16_t10dif_01.asm \
	crc/crc16_t10dif_by4.asm crc/crc32_ieee_01.asm \
	crc/crc32_ieee_by4.asm crc/crc32_iscsi_01.asm \
	crc/crc32_iscsi_00.asm crc/crc_multibinary.asm crc/crc_base.c \
	igzip/igzip.c igzip/hufftables_c.c igzip/crc_utils_01.asm \
	igzip/crc_utils_04.asm igzip/igzip_body_01.asm \
	igzip/igzip_body_04.asm igzip/igzip_finish.asm \
	igzip/igzip_stateless_01.asm igzip/igzip_stateless_04.asm \
	igzip/crc_data.asm igzip/crc32_gzip.asm \
	igzip/detect_repeated_char.asm igzip/igzip_multibinary.asm \
	igzip/igzip_stateless_base.c igzip/igzip_base.c \
	igzip/huff_codes.c
extern_hdrs = include/erasure_code.h include/gf_vect_mul.h \
	include/raid.h include/crc.h include/igzip_lib.h
other_src = erasure_code/ec_base.h include/multibinary.asm \
	include/reg_sizes.asm include/test.h include/types.h \
	include/test.h include/types.h include/reg_sizes.asm \
	include/types.h include/test.h igzip/bitbuf2.asm \
	igzip/data_struct2.asm igzip/igzip_buffer_utils_01.asm \
	igzip/igzip_buffer_utils_04.asm igzip/igzip_body.asm \
	igzip/igzip_finish.asm igzip/lz0a_const.asm igzip/options.asm \
	igzip/stdmac.asm igzip/igzip_compare_types.asm igzip/bitbuf2.h \
	igzip/repeated_char_result.h igzip/igzip_body.asm \
	igzip/igzip_stateless.asm igzip/huffman.asm \
	include/reg_sizes.asm include/multibinary.asm include/test.h \
	igzip/huffman.h igzip/huff_codes.h igzip/igzip_inflate_ref.h \
	igzip/igzip_inflate_ref.c igzip/crc_inflate.h
check_tests = erasure_code/gf_vect_mul_test \
	erasure_code/erasure_code_test erasure_code/gf_inverse_test \
	erasure_code/erasure_code_update_test raid/xor_gen_test \
	raid/pq_gen_test raid/xor_check_test raid/pq_check_test \
	crc/crc16_t10dif_test crc/crc32_ieee_test crc/crc32_iscsi_test \
	igzip/igzip_check
unit_tests = erasure_code/gf_vect_mul_sse_test \
	erasure_code/gf_vect_mul_avx_test \
	erasure_code/gf_vect_mul_base_test \
	erasure_code/gf_vect_dot_prod_sse_test \
	erasure_code/gf_vect_dot_prod_avx_test \
	erasure_code/gf_2vect_dot_prod_sse_test \
	erasure_code/gf_3vect_dot_prod_sse_test \
	erasure_code/gf_4vect_dot_prod_sse_test \
	erasure_code/gf_5vect_dot_prod_sse_test \
	erasure_code/gf_6vect_dot_prod_sse_test \
	erasure_code/gf_vect_dot_prod_base_test \
	erasure_code/gf_vect_dot_prod_test \
	erasure_code/gf_vect_mad_test \
	erasure_code/erasure_code_base_test \
	erasure_code/erasure_code_sse_test igzip/igzip_rand_test
perf_tests = erasure_code/gf_vect_mul_perf \
	erasure_code/gf_vect_mul_sse_perf \
	erasure_code/gf_vect_mul_avx_perf \
	erasure_code/gf_vect_dot_prod_sse_perf \
	erasure_code/gf_vect_dot_prod_avx_perf \
	erasure_code/gf_2vect_dot_prod_sse_perf \
	erasure_code/gf_3vect_dot_prod_sse_perf \
	erasure_code/gf_4vect_dot_prod_sse_perf \
	erasure_code/gf_5vect_dot_prod_sse_perf \
	erasure_code/gf_6vect_dot_prod_sse_perf \
	erasure_code/gf_vect_dot_prod_perf \
	erasure_code/gf_vect_dot_prod_1tbl \
	erasure_code/gf_vect_mad_perf erasure_code/erasure_code_perf \
	erasure_code/erasure_code_base_perf \
	erasure_code/erasure_code_sse_perf \
	erasure_code/erasure_code_update_perf raid/xor_gen_perf \
	raid/pq_gen_perf crc/crc16_t10dif_perf crc/crc32_ieee_perf \
	crc/crc32_iscsi_perf igzip/igzip_perf \
	igzip/igzip_sync_flush_perf
unit_tests_extra = 
perf_tests_extra = 
examples = raid/xor_example crc/crc_simple_test igzip/igzip_example \
	igzip/igzip_sync_flush_example

# Include tools to make custom Huffman tables based on sample data

# Include tools and tests using the reference inflate
other_tests = igzip/igzip_file_perf igzip/igzip_sync_flush_file_perf \
	igzip/igzip_stateless_file_perf \
	igzip/generate_custom_hufftables \
	igzip/generate_constant_block_header igzip/igzip_inflate_perf \
	igzip/igzip_inflate_test
lsrc32 = erasure_code/ec_highlevel_func.c \
	erasure_code/ec_multibinary.asm erasure_code/ec_base.c \
	erasure_code/gf_vect_dot_prod_avx.asm \
	erasure_code/gf_2vect_dot_prod_avx.asm \
	erasure_code/gf_3vect_dot_prod_avx.asm \
	erasure_code/gf_4vect_dot_prod_avx.asm \
	erasure_code/gf_vect_dot_prod_sse.asm \
	erasure_code/gf_2vect_dot_prod_sse.asm \
	erasure_code/gf_3vect_dot_prod_sse.asm \
	erasure_code/gf_4vect_dot_prod_sse.asm \
	erasure_code/gf_vect_dot_prod_avx2.asm \
	erasure_code/gf_2vect_dot_prod_avx2.asm \
	erasure_code/gf_3vect_dot_prod_avx2.asm \
	erasure_code/gf_4vect_dot_prod_avx2.asm xor_gen_sse.asm \
	pq_gen_sse_i32.asm xor_check_sse.asm pq_check_sse_i32.asm \
	raid_base.c
unit_tests32 = erasure_code/erasure_code_base_test \
	erasure_code/erasure_code_test \
	erasure_code/erasure_code_sse_test \
	erasure_code/gf_vect_mul_test \
	erasure_code/gf_vect_mul_base_test \
	erasure_code/gf_vect_dot_prod_base_test \
	erasure_code/gf_vect_dot_prod_test \
	erasure_code/gf_vect_dot_prod_avx_test \
	erasure_code/gf_vect_dot_prod_sse_test \
	erasure_code/gf_2vect_dot_prod_sse_test \
	erasure_code/gf_3vect_dot_prod_sse_test \
	erasure_code/gf_4vect_dot_prod_sse_test
perf_tests32 = erasure_code/gf_vect_mul_perf \
	erasure_code/gf_vect_dot_prod_perf \
	erasure_code/erasure_code_perf \
	erasure_code/erasure_code_base_perf \
	erasure_code/erasure_code_sse_perf \
	erasure_code/gf_vect_dot_prod_1tbl \
	erasure_code/gf_vect_dot_prod_avx_perf \
	erasure_code/gf_vect_dot_prod_sse_perf \
	erasure_code/gf_2vect_dot_prod_sse_perf \
	erasure_code/gf_3vect_dot_prod_sse_perf \
	erasure_code/gf_4vect_dot_prod_sse_perf
igzip_igzip_rand_test_LDADD = igzip/igzip_inflate_ref.lo libisal.la
igzip_igzip_inflate_perf_LDADD = igzip/igzip_inflate_ref.lo libisal.la
igzip_igzip_inflate_perf_LDFLAGS = -lz
igzip_igzip_inflate_test_LDADD = igzip/igzip_inflate_ref.lo libisal.la
igzip_igzip_inflate_test_LDFLAGS = -lz
igzip_igzip_check_LDADD = igzip/igzip_inflate_ref.lo libisal.la

# Include units

# LIB version info not necessarily the same as package version
LIBISAL_CURRENT = 2
LIBISAL_REVISION = 16
LIBISAL_AGE = 0
lib_LTLIBRARIES = libisal.la
libisal_la_SOURCES = ${lsrc}
nobase_include_HEADERS = isa-l.h
libisal_la_LDFLAGS = $(AM_LDFLAGS) \
	-version-info $(LIBISAL_CURRENT):$(LIBISAL_REVISION):$(LIBISAL_AGE)

libisal_la_LIBADD = ${noinst_LTLIBRARIES}
@USE_NASM_TRUE@as_filter = ${srcdir}/tools/nasm-filter.sh

# Support for yasm/nasm
@USE_YASM_TRUE@as_filter = ${srcdir}/tools/yasm-filter.sh
@USE_NASM_TRUE@as_include = $(addprefix -I ${srcdir}/,$(sort $(dir $(lsrc))))
AM_CCASFLAGS = ${yasm_args} ${INCLUDE} ${as_include} ${DEFS} ${D}

# Generate isa-l.h
BUILT_SOURCES = isa-l.h
license = bsd
licc = $(srcdir)/doc/license_$(license)_c.txt
lica = $(srcdir)/doc/license_$(license)_asm.txt
licm = $(srcdir)/doc/license_$(license)_make.txt
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .asm .c .lo .o .obj .s
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/erasure_code/Makefile.am $(srcdir)/raid/Makefile.am $(srcdir)/crc/Makefile.am $(srcdir)/igzip/Makefile.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
libisal.pc: $(top_builddir)/config.status $(srcdir)/libisal.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
erasure_code/$(am__dirstamp):
	@$(MKDIR_P) erasure_code
	@: > erasure_code/$(am__dirstamp)
erasure_code/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) erasure_code/$(DEPDIR)
	@: > erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/ec_highlevel_func.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/ec_base.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mul_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mul_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_dot_prod_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_dot_prod_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_dot_prod_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_dot_prod_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_dot_prod_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_dot_prod_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_dot_prod_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_dot_prod_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_dot_prod_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_dot_prod_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_dot_prod_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_dot_prod_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_dot_prod_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_dot_prod_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_dot_prod_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mad_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_mad_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_mad_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_mad_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_mad_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_mad_sse.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mad_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_mad_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_mad_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_mad_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_mad_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_mad_avx.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mad_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_mad_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_mad_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_mad_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_mad_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_mad_avx2.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/ec_multibinary.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_avx512.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_dot_prod_avx512.lo:  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_dot_prod_avx512.lo:  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_dot_prod_avx512.lo:  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mad_avx512.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_mad_avx512.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_mad_avx512.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_mad_avx512.lo: erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
raid/$(am__dirstamp):
	@$(MKDIR_P) raid
	@: > raid/$(am__dirstamp)
raid/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) raid/$(DEPDIR)
	@: > raid/$(DEPDIR)/$(am__dirstamp)
raid/xor_gen_sse.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/pq_gen_sse.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/xor_check_sse.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/pq_check_sse.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/pq_gen_avx.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/xor_gen_avx.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/pq_gen_avx2.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/raid_base.lo: raid/$(am__dirstamp) raid/$(DEPDIR)/$(am__dirstamp)
raid/raid_multibinary.lo: raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
crc/$(am__dirstamp):
	@$(MKDIR_P) crc
	@: > crc/$(am__dirstamp)
crc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crc/$(DEPDIR)
	@: > crc/$(DEPDIR)/$(am__dirstamp)
crc/crc16_t10dif_01.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc16_t10dif_by4.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_ieee_01.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_ieee_by4.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_iscsi_01.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_iscsi_00.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc_multibinary.lo: crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc_base.lo: crc/$(am__dirstamp) crc/$(DEPDIR)/$(am__dirstamp)
igzip/$(am__dirstamp):
	@$(MKDIR_P) igzip
	@: > igzip/$(am__dirstamp)
igzip/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) igzip/$(DEPDIR)
	@: > igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip.lo: igzip/$(am__dirstamp) igzip/$(DEPDIR)/$(am__dirstamp)
igzip/hufftables_c.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/crc_utils_01.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/crc_utils_04.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_body_01.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_body_04.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_finish.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_stateless_01.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_stateless_04.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/crc_data.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/crc32_gzip.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/detect_repeated_char.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_multibinary.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_stateless_base.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_base.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/huff_codes.lo: igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
libisal.la: $(libisal_la_OBJECTS) $(libisal_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libisal_la_LINK) -rpath $(libdir) $(libisal_la_OBJECTS) $(libisal_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
crc/crc16_t10dif_perf.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc16_t10dif_perf$(EXEEXT): $(crc_crc16_t10dif_perf_OBJECTS) $(crc_crc16_t10dif_perf_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc16_t10dif_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc16_t10dif_perf_OBJECTS) $(crc_crc16_t10dif_perf_LDADD) $(LIBS)
crc/crc16_t10dif_test.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc16_t10dif_test$(EXEEXT): $(crc_crc16_t10dif_test_OBJECTS) $(crc_crc16_t10dif_test_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc16_t10dif_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc16_t10dif_test_OBJECTS) $(crc_crc16_t10dif_test_LDADD) $(LIBS)
crc/crc32_ieee_perf.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_ieee_perf$(EXEEXT): $(crc_crc32_ieee_perf_OBJECTS) $(crc_crc32_ieee_perf_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc32_ieee_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc32_ieee_perf_OBJECTS) $(crc_crc32_ieee_perf_LDADD) $(LIBS)
crc/crc32_ieee_test.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_ieee_test$(EXEEXT): $(crc_crc32_ieee_test_OBJECTS) $(crc_crc32_ieee_test_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc32_ieee_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc32_ieee_test_OBJECTS) $(crc_crc32_ieee_test_LDADD) $(LIBS)
crc/crc32_iscsi_perf.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_iscsi_perf$(EXEEXT): $(crc_crc32_iscsi_perf_OBJECTS) $(crc_crc32_iscsi_perf_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc32_iscsi_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc32_iscsi_perf_OBJECTS) $(crc_crc32_iscsi_perf_LDADD) $(LIBS)
crc/crc32_iscsi_test.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc32_iscsi_test$(EXEEXT): $(crc_crc32_iscsi_test_OBJECTS) $(crc_crc32_iscsi_test_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc32_iscsi_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc32_iscsi_test_OBJECTS) $(crc_crc32_iscsi_test_LDADD) $(LIBS)
crc/crc_simple_test.$(OBJEXT): crc/$(am__dirstamp) \
	crc/$(DEPDIR)/$(am__dirstamp)
crc/crc_simple_test$(EXEEXT): $(crc_crc_simple_test_OBJECTS) $(crc_crc_simple_test_DEPENDENCIES) crc/$(am__dirstamp)
	@rm -f crc/crc_simple_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(crc_crc_simple_test_OBJECTS) $(crc_crc_simple_test_LDADD) $(LIBS)
erasure_code/erasure_code_base_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/erasure_code_base_perf$(EXEEXT): $(erasure_code_erasure_code_base_perf_OBJECTS) $(erasure_code_erasure_code_base_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/erasure_code_base_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_erasure_code_base_perf_OBJECTS) $(erasure_code_erasure_code_base_perf_LDADD) $(LIBS)
erasure_code/erasure_code_base_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/erasure_code_base_test$(EXEEXT): $(erasure_code_erasure_code_base_test_OBJECTS) $(erasure_code_erasure_code_base_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/erasure_code_base_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_erasure_code_base_test_OBJECTS) $(erasure_code_erasure_code_base_test_LDADD) $(LIBS)
erasure_code/erasure_code_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/erasure_code_perf$(EXEEXT): $(erasure_code_erasure_code_perf_OBJECTS) $(erasure_code_erasure_code_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/erasure_code_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_erasure_code_perf_OBJECTS) $(erasure_code_erasure_code_perf_LDADD) $(LIBS)
erasure_code/erasure_code_sse_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/erasure_code_sse_perf$(EXEEXT): $(erasure_code_erasure_code_sse_perf_OBJECTS) $(erasure_code_erasure_code_sse_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/erasure_code_sse_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_erasure_code_sse_perf_OBJECTS) $(erasure_code_erasure_code_sse_perf_LDADD) $(LIBS)
erasure_code/erasure_code_sse_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/erasure_code_sse_test$(EXEEXT): $(erasure_code_erasure_code_sse_test_OBJECTS) $(erasure_code_erasure_code_sse_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/erasure_code_sse_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_erasure_code_sse_test_OBJECTS) $(erasure_code_erasure_code_sse_test_LDADD) $(LIBS)
erasure_code/erasure_code_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/erasure_code_test$(EXEEXT): $(erasure_code_erasure_code_test_OBJECTS) $(erasure_code_erasure_code_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/erasure_code_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_erasure_code_test_OBJECTS) $(erasure_code_erasure_code_test_LDADD) $(LIBS)
erasure_code/erasure_code_update_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/erasure_code_update_perf$(EXEEXT): $(erasure_code_erasure_code_update_perf_OBJECTS) $(erasure_code_erasure_code_update_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/erasure_code_update_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_erasure_code_update_perf_OBJECTS) $(erasure_code_erasure_code_update_perf_LDADD) $(LIBS)
erasure_code/erasure_code_update_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/erasure_code_update_test$(EXEEXT): $(erasure_code_erasure_code_update_test_OBJECTS) $(erasure_code_erasure_code_update_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/erasure_code_update_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_erasure_code_update_test_OBJECTS) $(erasure_code_erasure_code_update_test_LDADD) $(LIBS)
erasure_code/gf_2vect_dot_prod_sse_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_dot_prod_sse_perf$(EXEEXT): $(erasure_code_gf_2vect_dot_prod_sse_perf_OBJECTS) $(erasure_code_gf_2vect_dot_prod_sse_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_2vect_dot_prod_sse_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_2vect_dot_prod_sse_perf_OBJECTS) $(erasure_code_gf_2vect_dot_prod_sse_perf_LDADD) $(LIBS)
erasure_code/gf_2vect_dot_prod_sse_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_2vect_dot_prod_sse_test$(EXEEXT): $(erasure_code_gf_2vect_dot_prod_sse_test_OBJECTS) $(erasure_code_gf_2vect_dot_prod_sse_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_2vect_dot_prod_sse_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_2vect_dot_prod_sse_test_OBJECTS) $(erasure_code_gf_2vect_dot_prod_sse_test_LDADD) $(LIBS)
erasure_code/gf_3vect_dot_prod_sse_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_dot_prod_sse_perf$(EXEEXT): $(erasure_code_gf_3vect_dot_prod_sse_perf_OBJECTS) $(erasure_code_gf_3vect_dot_prod_sse_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_3vect_dot_prod_sse_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_3vect_dot_prod_sse_perf_OBJECTS) $(erasure_code_gf_3vect_dot_prod_sse_perf_LDADD) $(LIBS)
erasure_code/gf_3vect_dot_prod_sse_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_3vect_dot_prod_sse_test$(EXEEXT): $(erasure_code_gf_3vect_dot_prod_sse_test_OBJECTS) $(erasure_code_gf_3vect_dot_prod_sse_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_3vect_dot_prod_sse_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_3vect_dot_prod_sse_test_OBJECTS) $(erasure_code_gf_3vect_dot_prod_sse_test_LDADD) $(LIBS)
erasure_code/gf_4vect_dot_prod_sse_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_dot_prod_sse_perf$(EXEEXT): $(erasure_code_gf_4vect_dot_prod_sse_perf_OBJECTS) $(erasure_code_gf_4vect_dot_prod_sse_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_4vect_dot_prod_sse_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_4vect_dot_prod_sse_perf_OBJECTS) $(erasure_code_gf_4vect_dot_prod_sse_perf_LDADD) $(LIBS)
erasure_code/gf_4vect_dot_prod_sse_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_4vect_dot_prod_sse_test$(EXEEXT): $(erasure_code_gf_4vect_dot_prod_sse_test_OBJECTS) $(erasure_code_gf_4vect_dot_prod_sse_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_4vect_dot_prod_sse_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_4vect_dot_prod_sse_test_OBJECTS) $(erasure_code_gf_4vect_dot_prod_sse_test_LDADD) $(LIBS)
erasure_code/gf_5vect_dot_prod_sse_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_dot_prod_sse_perf$(EXEEXT): $(erasure_code_gf_5vect_dot_prod_sse_perf_OBJECTS) $(erasure_code_gf_5vect_dot_prod_sse_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_5vect_dot_prod_sse_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_5vect_dot_prod_sse_perf_OBJECTS) $(erasure_code_gf_5vect_dot_prod_sse_perf_LDADD) $(LIBS)
erasure_code/gf_5vect_dot_prod_sse_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_5vect_dot_prod_sse_test$(EXEEXT): $(erasure_code_gf_5vect_dot_prod_sse_test_OBJECTS) $(erasure_code_gf_5vect_dot_prod_sse_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_5vect_dot_prod_sse_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_5vect_dot_prod_sse_test_OBJECTS) $(erasure_code_gf_5vect_dot_prod_sse_test_LDADD) $(LIBS)
erasure_code/gf_6vect_dot_prod_sse_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_dot_prod_sse_perf$(EXEEXT): $(erasure_code_gf_6vect_dot_prod_sse_perf_OBJECTS) $(erasure_code_gf_6vect_dot_prod_sse_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_6vect_dot_prod_sse_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_6vect_dot_prod_sse_perf_OBJECTS) $(erasure_code_gf_6vect_dot_prod_sse_perf_LDADD) $(LIBS)
erasure_code/gf_6vect_dot_prod_sse_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_6vect_dot_prod_sse_test$(EXEEXT): $(erasure_code_gf_6vect_dot_prod_sse_test_OBJECTS) $(erasure_code_gf_6vect_dot_prod_sse_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_6vect_dot_prod_sse_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_6vect_dot_prod_sse_test_OBJECTS) $(erasure_code_gf_6vect_dot_prod_sse_test_LDADD) $(LIBS)
erasure_code/gf_inverse_test.$(OBJEXT): erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_inverse_test$(EXEEXT): $(erasure_code_gf_inverse_test_OBJECTS) $(erasure_code_gf_inverse_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_inverse_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_inverse_test_OBJECTS) $(erasure_code_gf_inverse_test_LDADD) $(LIBS)
erasure_code/gf_vect_dot_prod_1tbl.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_1tbl$(EXEEXT): $(erasure_code_gf_vect_dot_prod_1tbl_OBJECTS) $(erasure_code_gf_vect_dot_prod_1tbl_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_dot_prod_1tbl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_dot_prod_1tbl_OBJECTS) $(erasure_code_gf_vect_dot_prod_1tbl_LDADD) $(LIBS)
erasure_code/gf_vect_dot_prod_avx_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_avx_perf$(EXEEXT): $(erasure_code_gf_vect_dot_prod_avx_perf_OBJECTS) $(erasure_code_gf_vect_dot_prod_avx_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_dot_prod_avx_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_dot_prod_avx_perf_OBJECTS) $(erasure_code_gf_vect_dot_prod_avx_perf_LDADD) $(LIBS)
erasure_code/gf_vect_dot_prod_avx_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_avx_test$(EXEEXT): $(erasure_code_gf_vect_dot_prod_avx_test_OBJECTS) $(erasure_code_gf_vect_dot_prod_avx_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_dot_prod_avx_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_dot_prod_avx_test_OBJECTS) $(erasure_code_gf_vect_dot_prod_avx_test_LDADD) $(LIBS)
erasure_code/gf_vect_dot_prod_base_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_base_test$(EXEEXT): $(erasure_code_gf_vect_dot_prod_base_test_OBJECTS) $(erasure_code_gf_vect_dot_prod_base_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_dot_prod_base_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_dot_prod_base_test_OBJECTS) $(erasure_code_gf_vect_dot_prod_base_test_LDADD) $(LIBS)
erasure_code/gf_vect_dot_prod_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_perf$(EXEEXT): $(erasure_code_gf_vect_dot_prod_perf_OBJECTS) $(erasure_code_gf_vect_dot_prod_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_dot_prod_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_dot_prod_perf_OBJECTS) $(erasure_code_gf_vect_dot_prod_perf_LDADD) $(LIBS)
erasure_code/gf_vect_dot_prod_sse_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_sse_perf$(EXEEXT): $(erasure_code_gf_vect_dot_prod_sse_perf_OBJECTS) $(erasure_code_gf_vect_dot_prod_sse_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_dot_prod_sse_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_dot_prod_sse_perf_OBJECTS) $(erasure_code_gf_vect_dot_prod_sse_perf_LDADD) $(LIBS)
erasure_code/gf_vect_dot_prod_sse_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_sse_test$(EXEEXT): $(erasure_code_gf_vect_dot_prod_sse_test_OBJECTS) $(erasure_code_gf_vect_dot_prod_sse_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_dot_prod_sse_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_dot_prod_sse_test_OBJECTS) $(erasure_code_gf_vect_dot_prod_sse_test_LDADD) $(LIBS)
erasure_code/gf_vect_dot_prod_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_dot_prod_test$(EXEEXT): $(erasure_code_gf_vect_dot_prod_test_OBJECTS) $(erasure_code_gf_vect_dot_prod_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_dot_prod_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_dot_prod_test_OBJECTS) $(erasure_code_gf_vect_dot_prod_test_LDADD) $(LIBS)
erasure_code/gf_vect_mad_perf.$(OBJEXT): erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mad_perf$(EXEEXT): $(erasure_code_gf_vect_mad_perf_OBJECTS) $(erasure_code_gf_vect_mad_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_mad_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_mad_perf_OBJECTS) $(erasure_code_gf_vect_mad_perf_LDADD) $(LIBS)
erasure_code/gf_vect_mad_test.$(OBJEXT): erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mad_test$(EXEEXT): $(erasure_code_gf_vect_mad_test_OBJECTS) $(erasure_code_gf_vect_mad_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_mad_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_mad_test_OBJECTS) $(erasure_code_gf_vect_mad_test_LDADD) $(LIBS)
erasure_code/gf_vect_mul_avx_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mul_avx_perf$(EXEEXT): $(erasure_code_gf_vect_mul_avx_perf_OBJECTS) $(erasure_code_gf_vect_mul_avx_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_mul_avx_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_mul_avx_perf_OBJECTS) $(erasure_code_gf_vect_mul_avx_perf_LDADD) $(LIBS)
erasure_code/gf_vect_mul_avx_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mul_avx_test$(EXEEXT): $(erasure_code_gf_vect_mul_avx_test_OBJECTS) $(erasure_code_gf_vect_mul_avx_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_mul_avx_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_mul_avx_test_OBJECTS) $(erasure_code_gf_vect_mul_avx_test_LDADD) $(LIBS)
erasure_code/gf_vect_mul_base_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mul_base_test$(EXEEXT): $(erasure_code_gf_vect_mul_base_test_OBJECTS) $(erasure_code_gf_vect_mul_base_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_mul_base_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_mul_base_test_OBJECTS) $(erasure_code_gf_vect_mul_base_test_LDADD) $(LIBS)
erasure_code/gf_vect_mul_perf.$(OBJEXT): erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mul_perf$(EXEEXT): $(erasure_code_gf_vect_mul_perf_OBJECTS) $(erasure_code_gf_vect_mul_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_mul_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_mul_perf_OBJECTS) $(erasure_code_gf_vect_mul_perf_LDADD) $(LIBS)
erasure_code/gf_vect_mul_sse_perf.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mul_sse_perf$(EXEEXT): $(erasure_code_gf_vect_mul_sse_perf_OBJECTS) $(erasure_code_gf_vect_mul_sse_perf_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_mul_sse_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_mul_sse_perf_OBJECTS) $(erasure_code_gf_vect_mul_sse_perf_LDADD) $(LIBS)
erasure_code/gf_vect_mul_sse_test.$(OBJEXT):  \
	erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mul_sse_test$(EXEEXT): $(erasure_code_gf_vect_mul_sse_test_OBJECTS) $(erasure_code_gf_vect_mul_sse_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_mul_sse_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_mul_sse_test_OBJECTS) $(erasure_code_gf_vect_mul_sse_test_LDADD) $(LIBS)
erasure_code/gf_vect_mul_test.$(OBJEXT): erasure_code/$(am__dirstamp) \
	erasure_code/$(DEPDIR)/$(am__dirstamp)
erasure_code/gf_vect_mul_test$(EXEEXT): $(erasure_code_gf_vect_mul_test_OBJECTS) $(erasure_code_gf_vect_mul_test_DEPENDENCIES) erasure_code/$(am__dirstamp)
	@rm -f erasure_code/gf_vect_mul_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erasure_code_gf_vect_mul_test_OBJECTS) $(erasure_code_gf_vect_mul_test_LDADD) $(LIBS)
igzip/generate_constant_block_header.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/generate_constant_block_header$(EXEEXT): $(igzip_generate_constant_block_header_OBJECTS) $(igzip_generate_constant_block_header_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/generate_constant_block_header$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_generate_constant_block_header_OBJECTS) $(igzip_generate_constant_block_header_LDADD) $(LIBS)
igzip/generate_custom_hufftables.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/generate_custom_hufftables$(EXEEXT): $(igzip_generate_custom_hufftables_OBJECTS) $(igzip_generate_custom_hufftables_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/generate_custom_hufftables$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_generate_custom_hufftables_OBJECTS) $(igzip_generate_custom_hufftables_LDADD) $(LIBS)
igzip/igzip_check.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_check$(EXEEXT): $(igzip_igzip_check_OBJECTS) $(igzip_igzip_check_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_check$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_check_OBJECTS) $(igzip_igzip_check_LDADD) $(LIBS)
igzip/igzip_example.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_example$(EXEEXT): $(igzip_igzip_example_OBJECTS) $(igzip_igzip_example_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_example_OBJECTS) $(igzip_igzip_example_LDADD) $(LIBS)
igzip/igzip_file_perf.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_file_perf$(EXEEXT): $(igzip_igzip_file_perf_OBJECTS) $(igzip_igzip_file_perf_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_file_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_file_perf_OBJECTS) $(igzip_igzip_file_perf_LDADD) $(LIBS)
igzip/igzip_inflate_perf.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_inflate_perf$(EXEEXT): $(igzip_igzip_inflate_perf_OBJECTS) $(igzip_igzip_inflate_perf_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_inflate_perf$(EXEEXT)
	$(AM_V_CCLD)$(igzip_igzip_inflate_perf_LINK) $(igzip_igzip_inflate_perf_OBJECTS) $(igzip_igzip_inflate_perf_LDADD) $(LIBS)
igzip/igzip_inflate_test.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_inflate_test$(EXEEXT): $(igzip_igzip_inflate_test_OBJECTS) $(igzip_igzip_inflate_test_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_inflate_test$(EXEEXT)
	$(AM_V_CCLD)$(igzip_igzip_inflate_test_LINK) $(igzip_igzip_inflate_test_OBJECTS) $(igzip_igzip_inflate_test_LDADD) $(LIBS)
igzip/igzip_perf.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_perf$(EXEEXT): $(igzip_igzip_perf_OBJECTS) $(igzip_igzip_perf_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_perf_OBJECTS) $(igzip_igzip_perf_LDADD) $(LIBS)
igzip/igzip_rand_test.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_rand_test$(EXEEXT): $(igzip_igzip_rand_test_OBJECTS) $(igzip_igzip_rand_test_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_rand_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_rand_test_OBJECTS) $(igzip_igzip_rand_test_LDADD) $(LIBS)
igzip/igzip_stateless_file_perf.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_stateless_file_perf$(EXEEXT): $(igzip_igzip_stateless_file_perf_OBJECTS) $(igzip_igzip_stateless_file_perf_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_stateless_file_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_stateless_file_perf_OBJECTS) $(igzip_igzip_stateless_file_perf_LDADD) $(LIBS)
igzip/igzip_sync_flush_example.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_sync_flush_example$(EXEEXT): $(igzip_igzip_sync_flush_example_OBJECTS) $(igzip_igzip_sync_flush_example_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_sync_flush_example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_sync_flush_example_OBJECTS) $(igzip_igzip_sync_flush_example_LDADD) $(LIBS)
igzip/igzip_sync_flush_file_perf.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_sync_flush_file_perf$(EXEEXT): $(igzip_igzip_sync_flush_file_perf_OBJECTS) $(igzip_igzip_sync_flush_file_perf_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_sync_flush_file_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_sync_flush_file_perf_OBJECTS) $(igzip_igzip_sync_flush_file_perf_LDADD) $(LIBS)
igzip/igzip_sync_flush_perf.$(OBJEXT): igzip/$(am__dirstamp) \
	igzip/$(DEPDIR)/$(am__dirstamp)
igzip/igzip_sync_flush_perf$(EXEEXT): $(igzip_igzip_sync_flush_perf_OBJECTS) $(igzip_igzip_sync_flush_perf_DEPENDENCIES) igzip/$(am__dirstamp)
	@rm -f igzip/igzip_sync_flush_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igzip_igzip_sync_flush_perf_OBJECTS) $(igzip_igzip_sync_flush_perf_LDADD) $(LIBS)
raid/pq_check_test.$(OBJEXT): raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/pq_check_test$(EXEEXT): $(raid_pq_check_test_OBJECTS) $(raid_pq_check_test_DEPENDENCIES) raid/$(am__dirstamp)
	@rm -f raid/pq_check_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(raid_pq_check_test_OBJECTS) $(raid_pq_check_test_LDADD) $(LIBS)
raid/pq_gen_perf.$(OBJEXT): raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/pq_gen_perf$(EXEEXT): $(raid_pq_gen_perf_OBJECTS) $(raid_pq_gen_perf_DEPENDENCIES) raid/$(am__dirstamp)
	@rm -f raid/pq_gen_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(raid_pq_gen_perf_OBJECTS) $(raid_pq_gen_perf_LDADD) $(LIBS)
raid/pq_gen_test.$(OBJEXT): raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/pq_gen_test$(EXEEXT): $(raid_pq_gen_test_OBJECTS) $(raid_pq_gen_test_DEPENDENCIES) raid/$(am__dirstamp)
	@rm -f raid/pq_gen_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(raid_pq_gen_test_OBJECTS) $(raid_pq_gen_test_LDADD) $(LIBS)
raid/xor_check_test.$(OBJEXT): raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/xor_check_test$(EXEEXT): $(raid_xor_check_test_OBJECTS) $(raid_xor_check_test_DEPENDENCIES) raid/$(am__dirstamp)
	@rm -f raid/xor_check_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(raid_xor_check_test_OBJECTS) $(raid_xor_check_test_LDADD) $(LIBS)
raid/xor_example.$(OBJEXT): raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/xor_example$(EXEEXT): $(raid_xor_example_OBJECTS) $(raid_xor_example_DEPENDENCIES) raid/$(am__dirstamp)
	@rm -f raid/xor_example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(raid_xor_example_OBJECTS) $(raid_xor_example_LDADD) $(LIBS)
raid/xor_gen_perf.$(OBJEXT): raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/xor_gen_perf$(EXEEXT): $(raid_xor_gen_perf_OBJECTS) $(raid_xor_gen_perf_DEPENDENCIES) raid/$(am__dirstamp)
	@rm -f raid/xor_gen_perf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(raid_xor_gen_perf_OBJECTS) $(raid_xor_gen_perf_LDADD) $(LIBS)
raid/xor_gen_test.$(OBJEXT): raid/$(am__dirstamp) \
	raid/$(DEPDIR)/$(am__dirstamp)
raid/xor_gen_test$(EXEEXT): $(raid_xor_gen_test_OBJECTS) $(raid_xor_gen_test_DEPENDENCIES) raid/$(am__dirstamp)
	@rm -f raid/xor_gen_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(raid_xor_gen_test_OBJECTS) $(raid_xor_gen_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f crc/crc16_t10dif_01.$(OBJEXT)
	-rm -f crc/crc16_t10dif_01.lo
	-rm -f crc/crc16_t10dif_by4.$(OBJEXT)
	-rm -f crc/crc16_t10dif_by4.lo
	-rm -f crc/crc16_t10dif_perf.$(OBJEXT)
	-rm -f crc/crc16_t10dif_test.$(OBJEXT)
	-rm -f crc/crc32_ieee_01.$(OBJEXT)
	-rm -f crc/crc32_ieee_01.lo
	-rm -f crc/crc32_ieee_by4.$(OBJEXT)
	-rm -f crc/crc32_ieee_by4.lo
	-rm -f crc/crc32_ieee_perf.$(OBJEXT)
	-rm -f crc/crc32_ieee_test.$(OBJEXT)
	-rm -f crc/crc32_iscsi_00.$(OBJEXT)
	-rm -f crc/crc32_iscsi_00.lo
	-rm -f crc/crc32_iscsi_01.$(OBJEXT)
	-rm -f crc/crc32_iscsi_01.lo
	-rm -f crc/crc32_iscsi_perf.$(OBJEXT)
	-rm -f crc/crc32_iscsi_test.$(OBJEXT)
	-rm -f crc/crc_base.$(OBJEXT)
	-rm -f crc/crc_base.lo
	-rm -f crc/crc_multibinary.$(OBJEXT)
	-rm -f crc/crc_multibinary.lo
	-rm -f crc/crc_simple_test.$(OBJEXT)
	-rm -f erasure_code/ec_base.$(OBJEXT)
	-rm -f erasure_code/ec_base.lo
	-rm -f erasure_code/ec_highlevel_func.$(OBJEXT)
	-rm -f erasure_code/ec_highlevel_func.lo
	-rm -f erasure_code/ec_multibinary.$(OBJEXT)
	-rm -f erasure_code/ec_multibinary.lo
	-rm -f erasure_code/erasure_code_base_perf.$(OBJEXT)
	-rm -f erasure_code/erasure_code_base_test.$(OBJEXT)
	-rm -f erasure_code/erasure_code_perf.$(OBJEXT)
	-rm -f erasure_code/erasure_code_sse_perf.$(OBJEXT)
	-rm -f erasure_code/erasure_code_sse_test.$(OBJEXT)
	-rm -f erasure_code/erasure_code_test.$(OBJEXT)
	-rm -f erasure_code/erasure_code_update_perf.$(OBJEXT)
	-rm -f erasure_code/erasure_code_update_test.$(OBJEXT)
	-rm -f erasure_code/gf_2vect_dot_prod_avx.$(OBJEXT)
	-rm -f erasure_code/gf_2vect_dot_prod_avx.lo
	-rm -f erasure_code/gf_2vect_dot_prod_avx2.$(OBJEXT)
	-rm -f erasure_code/gf_2vect_dot_prod_avx2.lo
	-rm -f erasure_code/gf_2vect_dot_prod_avx512.$(OBJEXT)
	-rm -f erasure_code/gf_2vect_dot_prod_avx512.lo
	-rm -f erasure_code/gf_2vect_dot_prod_sse.$(OBJEXT)
	-rm -f erasure_code/gf_2vect_dot_prod_sse.lo
	-rm -f erasure_code/gf_2vect_dot_prod_sse_perf.$(OBJEXT)
	-rm -f erasure_code/gf_2vect_dot_prod_sse_test.$(OBJEXT)
	-rm -f erasure_code/gf_2vect_mad_avx.$(OBJEXT)
	-rm -f erasure_code/gf_2vect_mad_avx.lo
	-rm -f erasure_code/gf_2vect_mad_avx2.$(OBJEXT)
	-rm -f erasure_code/gf_2vect_mad_avx2.lo
	-rm -f erasure_code/gf_2vect_mad_avx512.$(OBJEXT)
	-rm -f erasure_code/gf_2vect_mad_avx512.lo
	-rm -f erasure_code/gf_2vect_mad_sse.$(OBJEXT)
	-rm -f erasure_code/gf_2vect_mad_sse.lo
	-rm -f erasure_code/gf_3vect_dot_prod_avx.$(OBJEXT)
	-rm -f erasure_code/gf_3vect_dot_prod_avx.lo
	-rm -f erasure_code/gf_3vect_dot_prod_avx2.$(OBJEXT)
	-rm -f erasure_code/gf_3vect_dot_prod_avx2.lo
	-rm -f erasure_code/gf_3vect_dot_prod_avx512.$(OBJEXT)
	-rm -f erasure_code/gf_3vect_dot_prod_avx512.lo
	-rm -f erasure_code/gf_3vect_dot_prod_sse.$(OBJEXT)
	-rm -f erasure_code/gf_3vect_dot_prod_sse.lo
	-rm -f erasure_code/gf_3vect_dot_prod_sse_perf.$(OBJEXT)
	-rm -f erasure_code/gf_3vect_dot_prod_sse_test.$(OBJEXT)
	-rm -f erasure_code/gf_3vect_mad_avx.$(OBJEXT)
	-rm -f erasure_code/gf_3vect_mad_avx.lo
	-rm -f erasure_code/gf_3vect_mad_avx2.$(OBJEXT)
	-rm -f erasure_code/gf_3vect_mad_avx2.lo
	-rm -f erasure_code/gf_3vect_mad_avx512.$(OBJEXT)
	-rm -f erasure_code/gf_3vect_mad_avx512.lo
	-rm -f erasure_code/gf_3vect_mad_sse.$(OBJEXT)
	-rm -f erasure_code/gf_3vect_mad_sse.lo
	-rm -f erasure_code/gf_4vect_dot_prod_avx.$(OBJEXT)
	-rm -f erasure_code/gf_4vect_dot_prod_avx.lo
	-rm -f erasure_code/gf_4vect_dot_prod_avx2.$(OBJEXT)
	-rm -f erasure_code/gf_4vect_dot_prod_avx2.lo
	-rm -f erasure_code/gf_4vect_dot_prod_avx512.$(OBJEXT)
	-rm -f erasure_code/gf_4vect_dot_prod_avx512.lo
	-rm -f erasure_code/gf_4vect_dot_prod_sse.$(OBJEXT)
	-rm -f erasure_code/gf_4vect_dot_prod_sse.lo
	-rm -f erasure_code/gf_4vect_dot_prod_sse_perf.$(OBJEXT)
	-rm -f erasure_code/gf_4vect_dot_prod_sse_test.$(OBJEXT)
	-rm -f erasure_code/gf_4vect_mad_avx.$(OBJEXT)
	-rm -f erasure_code/gf_4vect_mad_avx.lo
	-rm -f erasure_code/gf_4vect_mad_avx2.$(OBJEXT)
	-rm -f erasure_code/gf_4vect_mad_avx2.lo
	-rm -f erasure_code/gf_4vect_mad_avx512.$(OBJEXT)
	-rm -f erasure_code/gf_4vect_mad_avx512.lo
	-rm -f erasure_code/gf_4vect_mad_sse.$(OBJEXT)
	-rm -f erasure_code/gf_4vect_mad_sse.lo
	-rm -f erasure_code/gf_5vect_dot_prod_avx.$(OBJEXT)
	-rm -f erasure_code/gf_5vect_dot_prod_avx.lo
	-rm -f erasure_code/gf_5vect_dot_prod_avx2.$(OBJEXT)
	-rm -f erasure_code/gf_5vect_dot_prod_avx2.lo
	-rm -f erasure_code/gf_5vect_dot_prod_sse.$(OBJEXT)
	-rm -f erasure_code/gf_5vect_dot_prod_sse.lo
	-rm -f erasure_code/gf_5vect_dot_prod_sse_perf.$(OBJEXT)
	-rm -f erasure_code/gf_5vect_dot_prod_sse_test.$(OBJEXT)
	-rm -f erasure_code/gf_5vect_mad_avx.$(OBJEXT)
	-rm -f erasure_code/gf_5vect_mad_avx.lo
	-rm -f erasure_code/gf_5vect_mad_avx2.$(OBJEXT)
	-rm -f erasure_code/gf_5vect_mad_avx2.lo
	-rm -f erasure_code/gf_5vect_mad_sse.$(OBJEXT)
	-rm -f erasure_code/gf_5vect_mad_sse.lo
	-rm -f erasure_code/gf_6vect_dot_prod_avx.$(OBJEXT)
	-rm -f erasure_code/gf_6vect_dot_prod_avx.lo
	-rm -f erasure_code/gf_6vect_dot_prod_avx2.$(OBJEXT)
	-rm -f erasure_code/gf_6vect_dot_prod_avx2.lo
	-rm -f erasure_code/gf_6vect_dot_prod_sse.$(OBJEXT)
	-rm -f erasure_code/gf_6vect_dot_prod_sse.lo
	-rm -f erasure_code/gf_6vect_dot_prod_sse_perf.$(OBJEXT)
	-rm -f erasure_code/gf_6vect_dot_prod_sse_test.$(OBJEXT)
	-rm -f erasure_code/gf_6vect_mad_avx.$(OBJEXT)
	-rm -f erasure_code/gf_6vect_mad_avx.lo
	-rm -f erasure_code/gf_6vect_mad_avx2.$(OBJEXT)
	-rm -f erasure_code/gf_6vect_mad_avx2.lo
	-rm -f erasure_code/gf_6vect_mad_sse.$(OBJEXT)
	-rm -f erasure_code/gf_6vect_mad_sse.lo
	-rm -f erasure_code/gf_inverse_test.$(OBJEXT)
	-rm -f erasure_code/gf_vect_dot_prod_1tbl.$(OBJEXT)
	-rm -f erasure_code/gf_vect_dot_prod_avx.$(OBJEXT)
	-rm -f erasure_code/gf_vect_dot_prod_avx.lo
	-rm -f erasure_code/gf_vect_dot_prod_avx2.$(OBJEXT)
	-rm -f erasure_code/gf_vect_dot_prod_avx2.lo
	-rm -f erasure_code/gf_vect_dot_prod_avx512.$(OBJEXT)
	-rm -f erasure_code/gf_vect_dot_prod_avx512.lo
	-rm -f erasure_code/gf_vect_dot_prod_avx_perf.$(OBJEXT)
	-rm -f erasure_code/gf_vect_dot_prod_avx_test.$(OBJEXT)
	-rm -f erasure_code/gf_vect_dot_prod_base_test.$(OBJEXT)
	-rm -f erasure_code/gf_vect_dot_prod_perf.$(OBJEXT)
	-rm -f erasure_code/gf_vect_dot_prod_sse.$(OBJEXT)
	-rm -f erasure_code/gf_vect_dot_prod_sse.lo
	-rm -f erasure_code/gf_vect_dot_prod_sse_perf.$(OBJEXT)
	-rm -f erasure_code/gf_vect_dot_prod_sse_test.$(OBJEXT)
	-rm -f erasure_code/gf_vect_dot_prod_test.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mad_avx.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mad_avx.lo
	-rm -f erasure_code/gf_vect_mad_avx2.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mad_avx2.lo
	-rm -f erasure_code/gf_vect_mad_avx512.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mad_avx512.lo
	-rm -f erasure_code/gf_vect_mad_perf.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mad_sse.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mad_sse.lo
	-rm -f erasure_code/gf_vect_mad_test.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mul_avx.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mul_avx.lo
	-rm -f erasure_code/gf_vect_mul_avx_perf.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mul_avx_test.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mul_base_test.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mul_perf.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mul_sse.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mul_sse.lo
	-rm -f erasure_code/gf_vect_mul_sse_perf.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mul_sse_test.$(OBJEXT)
	-rm -f erasure_code/gf_vect_mul_test.$(OBJEXT)
	-rm -f igzip/crc32_gzip.$(OBJEXT)
	-rm -f igzip/crc32_gzip.lo
	-rm -f igzip/crc_data.$(OBJEXT)
	-rm -f igzip/crc_data.lo
	-rm -f igzip/crc_utils_01.$(OBJEXT)
	-rm -f igzip/crc_utils_01.lo
	-rm -f igzip/crc_utils_04.$(OBJEXT)
	-rm -f igzip/crc_utils_04.lo
	-rm -f igzip/detect_repeated_char.$(OBJEXT)
	-rm -f igzip/detect_repeated_char.lo
	-rm -f igzip/generate_constant_block_header.$(OBJEXT)
	-rm -f igzip/generate_custom_hufftables.$(OBJEXT)
	-rm -f igzip/huff_codes.$(OBJEXT)
	-rm -f igzip/huff_codes.lo
	-rm -f igzip/hufftables_c.$(OBJEXT)
	-rm -f igzip/hufftables_c.lo
	-rm -f igzip/igzip.$(OBJEXT)
	-rm -f igzip/igzip.lo
	-rm -f igzip/igzip_base.$(OBJEXT)
	-rm -f igzip/igzip_base.lo
	-rm -f igzip/igzip_body_01.$(OBJEXT)
	-rm -f igzip/igzip_body_01.lo
	-rm -f igzip/igzip_body_04.$(OBJEXT)
	-rm -f igzip/igzip_body_04.lo
	-rm -f igzip/igzip_check.$(OBJEXT)
	-rm -f igzip/igzip_example.$(OBJEXT)
	-rm -f igzip/igzip_file_perf.$(OBJEXT)
	-rm -f igzip/igzip_finish.$(OBJEXT)
	-rm -f igzip/igzip_finish.lo
	-rm -f igzip/igzip_inflate_perf.$(OBJEXT)
	-rm -f igzip/igzip_inflate_test.$(OBJEXT)
	-rm -f igzip/igzip_multibinary.$(OBJEXT)
	-rm -f igzip/igzip_multibinary.lo
	-rm -f igzip/igzip_perf.$(OBJEXT)
	-rm -f igzip/igzip_rand_test.$(OBJEXT)
	-rm -f igzip/igzip_stateless_01.$(OBJEXT)
	-rm -f igzip/igzip_stateless_01.lo
	-rm -f igzip/igzip_stateless_04.$(OBJEXT)
	-rm -f igzip/igzip_stateless_04.lo
	-rm -f igzip/igzip_stateless_base.$(OBJEXT)
	-rm -f igzip/igzip_stateless_base.lo
	-rm -f igzip/igzip_stateless_file_perf.$(OBJEXT)
	-rm -f igzip/igzip_sync_flush_example.$(OBJEXT)
	-rm -f igzip/igzip_sync_flush_file_perf.$(OBJEXT)
	-rm -f igzip/igzip_sync_flush_perf.$(OBJEXT)
	-rm -f raid/pq_check_sse.$(OBJEXT)
	-rm -f raid/pq_check_sse.lo
	-rm -f raid/pq_check_test.$(OBJEXT)
	-rm -f raid/pq_gen_avx.$(OBJEXT)
	-rm -f raid/pq_gen_avx.lo
	-rm -f raid/pq_gen_avx2.$(OBJEXT)
	-rm -f raid/pq_gen_avx2.lo
	-rm -f raid/pq_gen_perf.$(OBJEXT)
	-rm -f raid/pq_gen_sse.$(OBJEXT)
	-rm -f raid/pq_gen_sse.lo
	-rm -f raid/pq_gen_test.$(OBJEXT)
	-rm -f raid/raid_base.$(OBJEXT)
	-rm -f raid/raid_base.lo
	-rm -f raid/raid_multibinary.$(OBJEXT)
	-rm -f raid/raid_multibinary.lo
	-rm -f raid/xor_check_sse.$(OBJEXT)
	-rm -f raid/xor_check_sse.lo
	-rm -f raid/xor_check_test.$(OBJEXT)
	-rm -f raid/xor_example.$(OBJEXT)
	-rm -f raid/xor_gen_avx.$(OBJEXT)
	-rm -f raid/xor_gen_avx.lo
	-rm -f raid/xor_gen_perf.$(OBJEXT)
	-rm -f raid/xor_gen_sse.$(OBJEXT)
	-rm -f raid/xor_gen_sse.lo
	-rm -f raid/xor_gen_test.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@crc/$(DEPDIR)/crc16_t10dif_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crc/$(DEPDIR)/crc16_t10dif_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crc/$(DEPDIR)/crc32_ieee_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crc/$(DEPDIR)/crc32_ieee_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crc/$(DEPDIR)/crc32_iscsi_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crc/$(DEPDIR)/crc32_iscsi_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crc/$(DEPDIR)/crc_base.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crc/$(DEPDIR)/crc_simple_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/ec_base.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/ec_highlevel_func.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/erasure_code_base_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/erasure_code_base_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/erasure_code_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/erasure_code_sse_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/erasure_code_sse_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/erasure_code_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/erasure_code_update_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/erasure_code_update_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_2vect_dot_prod_sse_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_2vect_dot_prod_sse_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_3vect_dot_prod_sse_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_3vect_dot_prod_sse_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_4vect_dot_prod_sse_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_4vect_dot_prod_sse_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_5vect_dot_prod_sse_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_5vect_dot_prod_sse_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_6vect_dot_prod_sse_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_6vect_dot_prod_sse_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_inverse_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_dot_prod_1tbl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_dot_prod_avx_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_dot_prod_avx_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_dot_prod_base_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_dot_prod_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_dot_prod_sse_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_dot_prod_sse_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_dot_prod_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_mad_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_mad_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_mul_avx_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_mul_avx_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_mul_base_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_mul_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_mul_sse_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_mul_sse_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@erasure_code/$(DEPDIR)/gf_vect_mul_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/generate_constant_block_header.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/generate_custom_hufftables.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/huff_codes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/hufftables_c.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/igzip.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/igzip_base.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/igzip_check.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/igzip_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/igzip_file_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/igzip_inflate_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/igzip_inflate_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/igzip_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/igzip_rand_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/igzip_stateless_base.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/igzip_stateless_file_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/igzip_sync_flush_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/igzip_sync_flush_file_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@igzip/$(DEPDIR)/igzip_sync_flush_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@raid/$(DEPDIR)/pq_check_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@raid/$(DEPDIR)/pq_gen_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@raid/$(DEPDIR)/pq_gen_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@raid/$(DEPDIR)/raid_base.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@raid/$(DEPDIR)/xor_check_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@raid/$(DEPDIR)/xor_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@raid/$(DEPDIR)/xor_gen_perf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@raid/$(DEPDIR)/xor_gen_test.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.s.o:
	$(AM_V_CCAS) @AM_BACKSLASH@
	$(CCASCOMPILE) -c -o $@ $<

.s.obj:
	$(AM_V_CCAS) @AM_BACKSLASH@
	$(CCASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.s.lo:
	$(AM_V_CCAS) @AM_BACKSLASH@
	$(LTCCASCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf crc/.libs crc/_libs
	-rm -rf erasure_code/.libs erasure_code/_libs
	-rm -rf igzip/.libs igzip/_libs
	-rm -rf raid/.libs raid/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo "$(MKDIR_P) '$(DESTDIR)$(includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgincludedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)
dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod u+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f crc/$(DEPDIR)/$(am__dirstamp)
	-rm -f crc/$(am__dirstamp)
	-rm -f erasure_code/$(DEPDIR)/$(am__dirstamp)
	-rm -f erasure_code/$(am__dirstamp)
	-rm -f igzip/$(DEPDIR)/$(am__dirstamp)
	-rm -f igzip/$(am__dirstamp)
	-rm -f raid/$(DEPDIR)/$(am__dirstamp)
	-rm -f raid/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf crc/$(DEPDIR) erasure_code/$(DEPDIR) igzip/$(DEPDIR) raid/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nobase_includeHEADERS \
	install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf crc/$(DEPDIR) erasure_code/$(DEPDIR) igzip/$(DEPDIR) raid/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-nobase_includeHEADERS \
	uninstall-pkgincludeHEADERS

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-TESTS check-am \
	clean clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstLTLIBRARIES ctags dist dist-all \
	dist-bzip2 dist-gzip dist-lzma dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-nobase_includeHEADERS install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-libLTLIBRARIES uninstall-nobase_includeHEADERS \
	uninstall-pkgincludeHEADERS


igzip_rand_test: igzip_inflate_ref.o

igzip_inflate_perf: igzip_inflate_ref.o
igzip_inflate_perf: LDLIBS += -lz
igzip_inflate_test: igzip_inflate_ref.o
igzip_inflate_test: LDLIBS += -lz
igzip_check: igzip_inflate_ref.o

perfs: ${perf_tests}
tests: ${unit_tests}
other: ${other_tests}
perf: $(addsuffix .run,$(perf_tests))
ex: ${examples}
test: $(addsuffix .run,$(unit_tests))

# Build rule to run tests
%.run: %
	$<
	@echo Completed run: $<

.asm.s:
	@echo "  MKTMP   " $@;
	@cp $< $@
isa-l.h:
	@echo 'Building $@'
	@echo ''			>> $@
	@echo '#ifndef _ISAL_H_'	>> $@
	@echo '#define _ISAL_H_'	>> $@
	@echo ''			>> $@
	@echo '#define.ISAL_MAJOR_VERSION.${VERSION}' |  ${AWK} -F . '{print $$1, $$2, $$3}' >> $@
	@echo '#define.ISAL_MINOR_VERSION.${VERSION}' |  ${AWK} -F . '{print $$1, $$2, $$4}' >> $@
	@echo '#define.ISAL_PATCH_VERSION.${VERSION}' |  ${AWK} -F . '{print $$1, $$2, $$5}' >> $@
	@echo '#define ISAL_MAKE_VERSION(maj, min, patch)  ((maj) * 0x10000 + (min) * 0x100 + (patch))' >> $@
	@echo '#define ISAL_VERSION ISAL_MAKE_VERSION(ISAL_MAJOR_VERSION, ISAL_MINOR_VERSION, ISAL_PATCH_VERSION)' >> $@
	@echo ''			>> $@
	@for unit in $(sort $(extern_hdrs)); do echo "#include <isa-l/$$unit>" | sed -e 's;include/;;' >> $@; done
	@echo '#endif //_ISAL_H_'	>> $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
