kind: pipeline
name: arm64-linux-gcc-5.4

platform:
  os: linux
  arch: arm64

steps:
- name: arm64-linux-gcc-5.4
  image: ubuntu:xenial
  environment:
    C_COMPILER: gcc
  commands:
  - if [ -n "$C_COMPILER" ]; then export CC="$C_COMPILER"; fi
  - if [ -n "$AS_ASSEMBL" ]; then export AS="$AS_ASSEMBL"; fi
  - apt-get -qq update
  - apt-get install -qq -y build-essential git indent libtool libz-dev yasm autoconf
  - if [ -n "$CC" ]; then $CC --version; fi
  - if [ -n "$AS" ]; then $AS --version; fi
  - ./tools/test_autorun.sh "$TEST_TYPE"

---
kind: pipeline
name: arm64-linux-clang-3.8

platform:
  os: linux
  arch: arm64

steps:
- name: arm64-linux-clang-3.8
  image: ubuntu:xenial
  environment:
    C_COMPILER: clang
  commands:
  - if [ -n "$C_COMPILER" ]; then export CC="$C_COMPILER"; fi
  - if [ -n "$AS_ASSEMBL" ]; then export AS="$AS_ASSEMBL"; fi
  - apt-get -qq update
  - apt-get install -qq -y build-essential clang git indent libtool libz-dev yasm autoconf
  - if [ -n "$CC" ]; then $CC --version; fi
  - if [ -n "$AS" ]; then $AS --version; fi
  - ./tools/test_autorun.sh "$TEST_TYPE"

---
kind: pipeline
name: arm64-linux-clang-4.0

platform:
  os: linux
  arch: arm64

steps:
- name: arm64-linux-clang-4.0
  image: ubuntu:xenial
  environment:
    C_COMPILER: clang-4.0
  commands:
  - if [ -n "$C_COMPILER" ]; then export CC="$C_COMPILER"; fi
  - if [ -n "$AS_ASSEMBL" ]; then export AS="$AS_ASSEMBL"; fi
  - apt-get -qq update
  - apt-get install -qq -y build-essential clang-4.0 git indent libtool libz-dev yasm autoconf
  - if [ -n "$CC" ]; then $CC --version; fi
  - if [ -n "$AS" ]; then $AS --version; fi
  - ./tools/test_autorun.sh "$TEST_TYPE"

---
kind: pipeline
name: arm64-linux-gcc-4.7

platform:
  os: linux
  arch: arm64

steps:
- name: arm64-linux-gcc-4.7
  image: ubuntu:xenial
  environment:
    C_COMPILER: gcc-4.7
  commands:
  - if [ -n "$C_COMPILER" ]; then export CC="$C_COMPILER"; fi
  - if [ -n "$AS_ASSEMBL" ]; then export AS="$AS_ASSEMBL"; fi
  - apt-get -qq update
  - apt-get install -qq -y build-essential git indent libtool libz-dev software-properties-common yasm autoconf
  - add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - apt-get -qq update
  - apt-get install -qq -y g++-4.7
  - if [ -n "$CC" ]; then $CC --version; fi
  - if [ -n "$AS" ]; then $AS --version; fi
  - ./tools/test_autorun.sh "$TEST_TYPE"

---
kind: pipeline
name: arm64-linux-gcc-6

platform:
  os: linux
  arch: arm64

steps:
- name: arm64-linux-gcc-6
  image: debian:9
  environment:
    C_COMPILER: gcc
  commands:
  - if [ -n "$C_COMPILER" ]; then export CC="$C_COMPILER"; fi
  - if [ -n "$AS_ASSEMBL" ]; then export AS="$AS_ASSEMBL"; fi
  - apt-get -q update
  - apt-get install -y build-essential git indent libtool libz-dev software-properties-common yasm autoconf
  - if [ -n "$CC" ]; then $CC --version; fi
  - if [ -n "$AS" ]; then $AS --version; fi
  - ./tools/test_autorun.sh "$TEST_TYPE"

---
kind: pipeline
name: arm64-linux-extended-tests

platform:
  os: linux
  arch: arm64

steps:
- name: arm64-linux-extended-tests
  image: ubuntu:xenial
  environment:
    TEST_TYPE: ext
  commands:
  - if [ -n "$C_COMPILER" ]; then export CC="$C_COMPILER"; fi
  - if [ -n "$AS_ASSEMBL" ]; then export AS="$AS_ASSEMBL"; fi
  - apt-get -qq update
  - apt-get install -qq -y build-essential git indent libtool libz-dev software-properties-common yasm autoconf
  - if [ -n "$CC" ]; then $CC --version; fi
  - if [ -n "$AS" ]; then $AS --version; fi
  - ./tools/test_autorun.sh "$TEST_TYPE"
